Index: app/src/main/java/com/example/mando/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mando;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.media.AudioManager;\r\nimport android.media.MediaPlayer;\r\nimport android.media.SoundPool;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.VibrationEffect;\r\nimport android.os.Vibrator;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageButton;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.gson.Gson;\r\n\r\nimport java.io.IOException;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.DatagramPacket;\r\nimport java.net.DatagramSocket;\r\nimport java.net.Socket;\r\nimport java.net.SocketTimeoutException;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    // DECLARACIÓN DE VARIABLES\r\n    // Envío de objetos\r\n    private ObjectOutputStream oos;\r\n    private Socket socket;\r\n    private boolean isConnected;\r\n    private CommsController server;\r\n    // Joystick\r\n    private boolean isJoystickView = true;\r\n    private boolean isCarView = false;\r\n    private JoystickView joystickView;\r\n    // Reproductor de sonido\r\n    private MediaPlayer mediaPlayer;\r\n    private SoundPool soundPool;\r\n\r\n    //ImageButtons\r\n    private ImageButton settings, playJoystick, playCar, editJoystick, editCar, acelerador, freno, volante, marchaAtras;\r\n\r\n    //Posiciones de los botones del Joystick\r\n    private int buttonAX = 1700;\r\n    private int buttonAY = 550;\r\n    private int joystickX = 350;\r\n    private int joystickY = 700;\r\n\r\n    // Posiciones y escala de los botones del mando del coche\r\n    private float scaleAcelerador = 1.0f;\r\n    private float scaleFreno = 1.0f;\r\n    private float scaleVolante = 1.0f;\r\n    private float scaleMarchaAtras = 1.0f;\r\n\r\n\r\n    private int aceleradorX = 0, aceleradorY = 0;\r\n    private int frenoX = 144, frenoY = 0;\r\n    private int volanteX = 16, volanteY = 0;\r\n    private int marchaAtrasX = 100, marchaAtrasY = 0;\r\n\r\n    private boolean carLayoutInitialized = false;\r\n    private boolean controllerInitialized = false;\r\n    private boolean isMarchaAtras = false;\r\n\r\n    // Atributos OnTouch layout carreras\r\n    private float velocidad = 0f;\r\n    private final Handler handler = new Handler();\r\n    private final Runnable[] aceleradorRunnable = new Runnable[1];\r\n    private final Runnable[] frenoRunnable = new Runnable[1];\r\n    private float ultimoAngulo = Float.NaN;\r\n\r\n\r\n    @SuppressLint({\"UseCompatLoadingForDrawables\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        isConnected = false;\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        initRemoteController();\r\n    }\r\n\r\n    /**\r\n     * Función que inicializa el mando\r\n     */\r\n    private void initRemoteController() {\r\n        crearLayoutJoystick();\r\n        // Inicializar SoundPool\r\n        soundPool = new SoundPool(1, AudioManager.STREAM_MUSIC, 0);\r\n        int motorSoundId = soundPool.load(this, R.raw.motor_sound, 1);\r\n        settings = findViewById(R.id.btnSettings);\r\n        if (settings != null) {\r\n            settings.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    cambiarLayout();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Función que cambia entre un layout u otro\r\n     */\r\n    public void cambiarLayout() {\r\n        setContentView(R.layout.settings_layout);\r\n        playJoystick = findViewById(R.id.playJoystickLayout);\r\n        playCar = findViewById(R.id.playJCarLayout);\r\n        editJoystick = findViewById(R.id.editJoystickLayout);\r\n        editCar = findViewById(R.id.editCarLayout);\r\n        LayoutInflater inflater = LayoutInflater.from(this);\r\n        playCar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                setContentView(R.layout.car_layout);\r\n                if (!carLayoutInitialized) {\r\n                    initCarLayout();\r\n                } else {\r\n                    loadCarLayout();\r\n                }\r\n            }\r\n        });\r\n\r\n        playJoystick.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                setContentView(R.layout.activity_main);\r\n                crearLayoutJoystick();\r\n            }\r\n        });\r\n\r\n        editCar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                setContentView(R.layout.edit_layout);\r\n                mostrarVistaEnEditLayout(R.layout.car_layout);\r\n                crearVistaEditCar();\r\n            }\r\n        });\r\n\r\n        editJoystick.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                setContentView(R.layout.edit_layout);\r\n                FrameLayout container = findViewById(R.id.layoutPreviewContainer);\r\n                container.removeAllViews();\r\n                container.addView(crearJoystickViewSoloVisual());\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Función que muestra el layout indicado por parámetro para su edición\r\n     *\r\n     * @param layoutId\r\n     */\r\n    private void mostrarVistaEnEditLayout(int layoutId) {\r\n        FrameLayout layoutContainer = findViewById(R.id.layoutPreviewContainer);\r\n        LayoutInflater inflater = LayoutInflater.from(this);\r\n        layoutContainer.removeAllViews();\r\n        View layout = inflater.inflate(layoutId, layoutContainer, false);\r\n        layoutContainer.addView(layout);\r\n    }\r\n\r\n    /**\r\n     * Función que muestra los ImageButtons de los botones del layout del juego de carreras\r\n     * para su edición. Finalmente guarda los nuevos valores y los aplica.\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void crearVistaEditCar() {\r\n        FrameLayout layoutContainer = findViewById(R.id.layoutPreviewContainer);\r\n        layoutContainer.removeAllViews();\r\n        LayoutInflater inflater = LayoutInflater.from(this);\r\n        View carView = inflater.inflate(R.layout.car_layout, layoutContainer, false);\r\n        layoutContainer.addView(carView);\r\n\r\n        ImageButton acelerador = carView.findViewById(R.id.btnAcelerar);\r\n        ImageButton freno = carView.findViewById(R.id.btnFrenar);\r\n        ImageButton volante = carView.findViewById(R.id.volante);\r\n        ImageButton marchaAtras = carView.findViewById(R.id.marchaAtras);\r\n\r\n\r\n        // === Aplicar escala y posición al Acelerador ===\r\n        int width = 200;\r\n        int height = 200;\r\n        FrameLayout.LayoutParams aceleradorParams = new FrameLayout.LayoutParams(width, height);\r\n        aceleradorParams.leftMargin = aceleradorX;\r\n        aceleradorParams.topMargin = aceleradorY;\r\n        acelerador.setLayoutParams(aceleradorParams);\r\n        acelerador.setScaleX(scaleAcelerador);\r\n        acelerador.setScaleY(scaleAcelerador);\r\n\r\n        // === Aplicar escala y posición al Freno ===\r\n        FrameLayout.LayoutParams frenoParams = new FrameLayout.LayoutParams(width, height);\r\n        frenoParams.leftMargin = frenoX;\r\n        frenoParams.topMargin = frenoY;\r\n        freno.setLayoutParams(frenoParams);\r\n        freno.setScaleX(scaleFreno);\r\n        freno.setScaleY(scaleFreno);\r\n\r\n        // === Aplicar escala y posición al Volante ===\r\n        FrameLayout.LayoutParams volanteParams = new FrameLayout.LayoutParams(width, height);\r\n        volanteParams.leftMargin = volanteX;\r\n        volanteParams.topMargin = volanteY;\r\n        volante.setLayoutParams(volanteParams);\r\n        volante.setScaleX(scaleVolante);\r\n        volante.setScaleY(scaleVolante);\r\n\r\n        // === Aplicar escala y posición al cambio de marchas ===\r\n        FrameLayout.LayoutParams marchaParams = new FrameLayout.LayoutParams(width, height);\r\n        marchaParams.leftMargin = marchaAtrasX;\r\n        marchaParams.topMargin = marchaAtrasY;\r\n        volante.setLayoutParams(volanteParams);\r\n        volante.setScaleX(scaleMarchaAtras);\r\n        volante.setScaleY(scaleMarchaAtras);\r\n\r\n        // Habilitar movimiento y redimensión\r\n        acelerador.setOnTouchListener(new TouchResizeAndDragListener(this, acelerador));\r\n        freno.setOnTouchListener(new TouchResizeAndDragListener(this, freno));\r\n        volante.setOnTouchListener(new TouchResizeAndDragListener(this, volante));\r\n        marchaAtras.setOnTouchListener(new TouchResizeAndDragListener(this, marchaAtras));\r\n\r\n        // Botón guardar\r\n        ImageButton guardarBtn = findViewById(R.id.btnSettings);\r\n        ViewGroup parent = (ViewGroup) guardarBtn.getParent();\r\n        if (parent != null) {\r\n            parent.removeView(guardarBtn);\r\n        }\r\n\r\n        FrameLayout.LayoutParams guardarParams = new FrameLayout.LayoutParams(150, 150);\r\n        guardarParams.gravity = Gravity.TOP | Gravity.END;\r\n        guardarParams.setMargins(0, 50, 50, 0);\r\n        guardarBtn.setLayoutParams(guardarParams);\r\n        guardarBtn.setBackground(null);\r\n        guardarBtn.setImageResource(R.drawable.guardar);\r\n\r\n        guardarBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                aceleradorX = (int) acelerador.getX();\r\n                aceleradorY = (int) acelerador.getY();\r\n                scaleAcelerador = acelerador.getScaleX();\r\n\r\n                frenoX = (int) freno.getX();\r\n                frenoY = (int) freno.getY();\r\n                scaleFreno = freno.getScaleX();\r\n\r\n                volanteX = (int) volante.getX();\r\n                volanteY = (int) volante.getY();\r\n                scaleVolante = volante.getScaleX();\r\n\r\n                marchaAtrasX = (int) marchaAtras.getX();\r\n                marchaAtrasY = (int) marchaAtras.getY();\r\n                scaleMarchaAtras = marchaAtras.getScaleX();\r\n\r\n                Log.d(\"POS ACC: \", aceleradorX + \", \" + aceleradorY + \", Scale: \" + scaleAcelerador);\r\n                Log.d(\"POS BRK: \", frenoX + \", \" + frenoY + \", Scale: \" + scaleFreno);\r\n                Log.d(\"POS VOLANTE: \", volanteX + \", \" + volanteY + \", Scale: \" + scaleVolante);\r\n\r\n                setContentView(R.layout.car_layout);\r\n                loadCarLayout();\r\n            }\r\n        });\r\n\r\n        layoutContainer.addView(guardarBtn);\r\n    }\r\n\r\n    /**\r\n     * Función que inicializa el layout del juego de carreras.\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void initCarLayout() {\r\n        isJoystickView = false;\r\n        isCarView = true;\r\n        // Configurar el botón de Settings\r\n        ImageButton settings = findViewById(R.id.btnSettings);\r\n        settings.setOnClickListener(v -> cambiarLayout());\r\n\r\n        // Recuperar los botones de car_layout\r\n        acelerador = findViewById(R.id.btnAcelerar);\r\n        freno = findViewById(R.id.btnFrenar);\r\n        volante = findViewById(R.id.volante);\r\n        marchaAtras = findViewById(R.id.marchaAtras);\r\n\r\n        // Aplicar setButtonTouchListener a cada uno de los botones\r\n        if (acelerador != null) {\r\n            setButtonTouchListener(acelerador);\r\n        }\r\n        if (freno != null) {\r\n            setButtonTouchListener(freno);\r\n        }\r\n        if (volante != null) {\r\n            setButtonTouchListener(volante);\r\n        }\r\n        if (marchaAtras != null) {\r\n            marchaAtras.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    if (isMarchaAtras) {\r\n                        isMarchaAtras = false;\r\n                    } else {\r\n                        isMarchaAtras = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        carLayoutInitialized = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Función que carga las posiciones y los tamaños de los ImageButtons de la plantilla de\r\n     * carreras.\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void loadCarLayout() {\r\n        // Configurar el botón de Settings\r\n        ImageButton settings = findViewById(R.id.btnSettings);\r\n        settings.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                cambiarLayout();  // Cambiar de layout (si es necesario)\r\n            }\r\n        });\r\n\r\n        // Recuperar los botones de car_layout\r\n        ImageButton acelerador = findViewById(R.id.btnAcelerar);\r\n        ImageButton freno = findViewById(R.id.btnFrenar);\r\n        ImageButton volante = findViewById(R.id.volante);\r\n        ImageButton marchaAtras = findViewById(R.id.marchaAtras);\r\n\r\n        // Restaurar sus posiciones y tamaños manualmente\r\n        if (acelerador != null) {\r\n            int widthAcelerador = 200;\r\n            int heightAcelerador = 200;\r\n            FrameLayout.LayoutParams aceleradorParams = new FrameLayout.LayoutParams(widthAcelerador, heightAcelerador);\r\n            aceleradorParams.leftMargin = aceleradorX;\r\n            aceleradorParams.topMargin = aceleradorY;\r\n            acelerador.setLayoutParams(aceleradorParams);\r\n\r\n            // Escala visual aplicada por separado\r\n            acelerador.setScaleX(scaleAcelerador);\r\n            acelerador.setScaleY(scaleAcelerador);\r\n            setButtonTouchListener(acelerador);\r\n        }\r\n\r\n        if (freno != null) {\r\n            int widthFreno = 200;\r\n            int heightFreno = 200;\r\n            FrameLayout.LayoutParams frenoParams = new FrameLayout.LayoutParams(widthFreno, heightFreno);\r\n            frenoParams.leftMargin = frenoX;\r\n            frenoParams.topMargin = frenoY;\r\n            freno.setLayoutParams(frenoParams);\r\n\r\n            // Escala visual aplicada por separado\r\n            freno.setScaleX(scaleFreno);\r\n            freno.setScaleY(scaleFreno);\r\n            setButtonTouchListener(freno);\r\n        }\r\n\r\n        if (volante != null) {\r\n            int width = 300;\r\n            int height = 300;\r\n            FrameLayout.LayoutParams volanteParams = new FrameLayout.LayoutParams(width, height);\r\n            volanteParams.leftMargin = volanteX;\r\n            volanteParams.topMargin = volanteY;\r\n            volante.setLayoutParams(volanteParams);\r\n\r\n            // Escala visual aplicada por separado\r\n            volante.setScaleX(scaleVolante);\r\n            volante.setScaleY(scaleVolante);\r\n            setButtonTouchListener(volante);\r\n        }\r\n\r\n        if (marchaAtras != null) {\r\n            int width = 300;\r\n            int height = 300;\r\n            FrameLayout.LayoutParams marchaAtrasParams = new FrameLayout.LayoutParams(width, height);\r\n            marchaAtrasParams.leftMargin = marchaAtrasX;\r\n            marchaAtrasParams.topMargin = marchaAtrasY;\r\n            marchaAtras.setLayoutParams(marchaAtrasParams);\r\n\r\n            // Escala visual aplicada por separado\r\n            marchaAtras.setScaleX(scaleVolante);\r\n            marchaAtras.setScaleY(scaleVolante);\r\n            marchaAtras.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    if (isMarchaAtras) {\r\n                        isMarchaAtras = false;\r\n                    } else {\r\n                        isMarchaAtras = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Mostrar las posiciones y escalas en el log\r\n        Log.d(\"PosicionBotones\", \"Acelerador - X: \" + aceleradorX + \", Y: \" + aceleradorY + \", Scale: \" + scaleAcelerador);\r\n        Log.d(\"PosicionBotones\", \"Freno - X: \" + frenoX + \", Y: \" + frenoY + \", Scale: \" + scaleFreno);\r\n        Log.d(\"PosicionBotones\", \"Volante - X: \" + volanteX + \", Y: \" + volanteY + \", Scale: \" + scaleVolante);\r\n    }\r\n\r\n\r\n    /**\r\n     * Función que añade los eventos necesarios cuando se pulsa un botón.\r\n     *\r\n     * @param button\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void setButtonTouchListener(@NonNull ImageButton button) {\r\n        button.setOnTouchListener((v, event) -> {\r\n            int id = button.getId();\r\n            switch (event.getAction()) {\r\n                case MotionEvent.ACTION_DOWN:\r\n                    if (id == R.id.btnAcelerar) {\r\n                        // Evitar que se ejecuten ambos a la vez si se está frenando\r\n                        handler.removeCallbacks(frenoRunnable[0]); // Remover cualquier frenado pendiente\r\n\r\n                        // Acelerar cuando el botón se presiona\r\n                        aceleradorRunnable[0] = new Runnable() {\r\n                            @Override\r\n                            public void run() {\r\n                                if (isMarchaAtras) {\r\n                                    // Disminuir la velocidad si estamos en marcha atrás\r\n                                    if (velocidad > -15) { // Límite inferior de velocidad\r\n                                        velocidad -= 1f;\r\n                                        if (isConnected) {\r\n                                            sendMessageGson(new Message(\"velocidad_car\", velocidad).toGson());\r\n                                        }\r\n                                        handler.postDelayed(this, 100); // Continuar acelerando (reduciendo) cada 100 ms\r\n                                    }\r\n                                } else {\r\n                                    // Aumentar la velocidad si no estamos en marcha atrás\r\n                                    if (velocidad < 15) { // Límite superior de velocidad\r\n                                        velocidad += 1f;\r\n                                        if (isConnected) {\r\n                                            sendMessageGson(new Message(\"velocidad_car\", velocidad).toGson());\r\n                                        }\r\n                                        handler.postDelayed(this, 100); // Continuar acelerando cada 100 ms\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        handler.post(aceleradorRunnable[0]);\r\n                    } else if (id == R.id.btnFrenar) {\r\n                        // Evitar que se ejecute la aceleración si se está frenando\r\n                        handler.removeCallbacks(aceleradorRunnable[0]); // Remover cualquier aceleración pendiente\r\n\r\n                        // Frenar cuando se presiona el botón de frenar\r\n                        frenoRunnable[0] = new Runnable() {\r\n                            @Override\r\n                            public void run() {\r\n                                if (isMarchaAtras) {\r\n                                    // Si estamos en marcha atrás, aumentar la velocidad hasta llegar a 0\r\n                                    if (velocidad < -1) { // Solo aumentar la velocidad si es negativa\r\n                                        velocidad += 1f;\r\n                                        if (isConnected) {\r\n                                            sendMessageGson(new Message(\"velocidad_car\", velocidad).toGson());\r\n                                        }\r\n                                        handler.postDelayed(this, 100); // Continuar frenando (aumentando velocidad) cada 100 ms\r\n                                    }\r\n                                } else {\r\n                                    // Si no estamos en marcha atrás, disminuir la velocidad hasta llegar a 0\r\n                                    if (velocidad > 1) { // Solo reducir la velocidad si es positiva\r\n                                        velocidad -= 1f;\r\n                                        if (isConnected) {\r\n                                            sendMessageGson(new Message(\"velocidad_car\", velocidad).toGson());\r\n                                        }\r\n                                        handler.postDelayed(this, 100); // Continuar frenando (disminuyendo velocidad) cada 100 ms\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        handler.post(frenoRunnable[0]);\r\n                    }\r\n                    break;\r\n                case MotionEvent.ACTION_UP:\r\n                    if (id == R.id.btnAcelerar) {\r\n                        // Dejar de acelerar inmediatamente cuando se suelta el acelerador\r\n                        handler.removeCallbacks(aceleradorRunnable[0]);\r\n\r\n                        // Iniciar la desaceleración cuando se suelta el acelerador\r\n                        frenoRunnable[0] = new Runnable() {\r\n                            @Override\r\n                            public void run() {\r\n                                if (velocidad > 0) { // Solo reducir si la velocidad es positiva\r\n                                    velocidad -= 0.5f; // Disminuir la velocidad gradualmente\r\n                                    if (isConnected) {\r\n                                        sendMessageGson(new Message(\"velocidad_car\", velocidad).toGson());\r\n                                    }\r\n                                    handler.postDelayed(this, 100); // Continuar reduciendo la velocidad\r\n                                }\r\n                            }\r\n                        };\r\n                        handler.post(frenoRunnable[0]);\r\n                    } else if (id == R.id.btnFrenar) {\r\n                        // Dejar de frenar inmediatamente cuando se suelta el botón de freno\r\n                        handler.removeCallbacks(frenoRunnable[0]);\r\n                    }\r\n                    break;\r\n                case MotionEvent.ACTION_CANCEL:\r\n                    // Eliminar las tareas pendientes si se cancela el toque\r\n                    handler.removeCallbacks(aceleradorRunnable[0]);\r\n                    handler.removeCallbacks(frenoRunnable[0]);\r\n                    break;\r\n            }\r\n\r\n            // Lógica del volante (esto no cambia)\r\n            if (id == R.id.volante) {\r\n                float centerX = v.getWidth() / 2f;\r\n                float centerY = v.getHeight() / 2f;\r\n                float x = event.getX();\r\n                float y = event.getY();\r\n\r\n                float dx = x - centerX;\r\n                float dy = centerY - y;\r\n                float nuevoAngulo = (float) Math.toDegrees(Math.atan2(dx, dy));\r\n\r\n                float factorSuavizado = 0.2f;\r\n                if (Float.isNaN(ultimoAngulo)) ultimoAngulo = nuevoAngulo;\r\n                ultimoAngulo += factorSuavizado * (nuevoAngulo - ultimoAngulo);\r\n\r\n                v.setRotation(ultimoAngulo);\r\n                if (isConnected) {\r\n                    sendMessageGson(new Message(\"angle_car\", ultimoAngulo).toGson());\r\n                }\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Función para crear el layout del Joystick.\r\n     */\r\n    private void crearLayoutJoystick() {\r\n        isJoystickView = true;\r\n        isCarView = false;\r\n        mediaPlayer = MediaPlayer.create(this, R.raw.laser_gunshot);\r\n        mediaPlayer.setLooping(false);\r\n\r\n        FrameLayout mainLayout = new FrameLayout(this);\r\n        mainLayout.setLayoutParams(new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\r\n        //mainLayout.setBackground(getDrawable(R.drawable.space_background));\r\n\r\n        // Asegúrate de que el joystick anterior se elimine\r\n        if (joystickView != null) {\r\n            mainLayout.removeView(joystickView);\r\n        }\r\n\r\n        // Crear el joystick nuevo\r\n        joystickView = new JoystickView(this);\r\n        FrameLayout.LayoutParams joystickParams = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n        joystickParams.gravity = Gravity.CENTER;\r\n        joystickView.setLayoutParams(joystickParams);\r\n\r\n        mainLayout.addView(joystickView); // Añadir el joystick al layout\r\n\r\n        // Aplicar el centro del joystick\r\n        joystickView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (joystickX != -1 && joystickY != -1) {\r\n                    joystickView.setJoystickCenter(joystickX, joystickY);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // Botón A\r\n        Button circularButton = new Button(this);\r\n        FrameLayout.LayoutParams buttonParams = new FrameLayout.LayoutParams(200, 200);\r\n        buttonParams.leftMargin = buttonAX;\r\n        buttonParams.topMargin = buttonAY;\r\n        circularButton.setLayoutParams(buttonParams);\r\n        circularButton.setBackground(getDrawable(R.drawable.action_button));\r\n        circularButton.setText(\"A\");\r\n        circularButton.setTextSize(35);\r\n        circularButton.setTextColor(Color.WHITE);\r\n        circularButton.setGravity(Gravity.CENTER);\r\n\r\n        circularButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Message msg = new Message(\"action\", \"dispara\");\r\n                if (isConnected) {\r\n                    sendMessageGson(msg.toGson());\r\n                }\r\n                if (mediaPlayer.isPlaying()) {\r\n                    mediaPlayer.seekTo(0);\r\n                } else {\r\n                    mediaPlayer.start();\r\n                }\r\n            }\r\n        });\r\n\r\n        // Botón de configuración\r\n        ImageButton settingsButton = new ImageButton(this);\r\n        FrameLayout.LayoutParams settingsParams = new FrameLayout.LayoutParams(150, 150);\r\n        settingsParams.gravity = Gravity.TOP | Gravity.END;\r\n        settingsParams.setMargins(0, 50, 50, 0);\r\n        settingsButton.setLayoutParams(settingsParams);\r\n        settingsButton.setBackground(null);\r\n        settingsButton.setPadding(5, 5, 5, 5);\r\n        settingsButton.setScaleType(ImageButton.ScaleType.FIT_CENTER);\r\n        settingsButton.setImageResource(R.drawable.configuraciones);\r\n\r\n        settingsButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                cambiarLayout();\r\n            }\r\n        });\r\n\r\n        // Añadir elementos al layout principal\r\n        mainLayout.addView(circularButton);\r\n        mainLayout.addView(settingsButton);\r\n\r\n        setContentView(mainLayout);\r\n        startConnectionP2P();\r\n    }\r\n\r\n    private void startConnectionP2P() {\r\n        if (!controllerInitialized) {\r\n            startServer();\r\n            controllerInitialized = true;\r\n        }\r\n        if (!isConnected) {\r\n            startConnection();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Función que crea la vista para la edición del layout del Joystick.\r\n     *\r\n     * @return mainLayout\r\n     */\r\n    @SuppressLint({\"ClickableViewAccessibility\", \"UseCompatLoadingForDrawables\"})\r\n    private View crearJoystickViewSoloVisual() {\r\n        FrameLayout mainLayout = new FrameLayout(this);\r\n        mainLayout.setLayoutParams(new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));\r\n\r\n        // Vista del joystick (solo visual)\r\n        JoystickView previewJoystick = getPreviewJoystick(mainLayout);\r\n\r\n        // Botón A\r\n        Button fakeButton = new Button(this);\r\n        FrameLayout.LayoutParams buttonParams = new FrameLayout.LayoutParams(200, 200);\r\n        restaurarPosiciones(null, buttonParams);  // Restaurar posición del botón\r\n        buttonParams.rightMargin = buttonAX;\r\n        buttonParams.bottomMargin = buttonAY;\r\n        fakeButton.setLayoutParams(buttonParams);\r\n        fakeButton.setBackground(getDrawable(R.drawable.action_button));\r\n        fakeButton.setText(\"A\");\r\n        fakeButton.setTextSize(35);\r\n        fakeButton.setTextColor(Color.WHITE);\r\n        fakeButton.setGravity(Gravity.CENTER);\r\n\r\n        fakeButton.setOnTouchListener(new TouchResizeAndDragListener(this, fakeButton));\r\n\r\n        // Botón de guardar\r\n        ImageButton fakeSettings = new ImageButton(this);\r\n        FrameLayout.LayoutParams settingsParams = new FrameLayout.LayoutParams(150, 150);\r\n        settingsParams.gravity = Gravity.TOP | Gravity.END;\r\n        settingsParams.setMargins(0, 50, 50, 0);\r\n        fakeSettings.setLayoutParams(settingsParams);\r\n        fakeSettings.setBackground(null);\r\n        fakeSettings.setPadding(5, 5, 5, 5);\r\n        fakeSettings.setScaleType(ImageButton.ScaleType.FIT_CENTER);\r\n        fakeSettings.setImageResource(R.drawable.guardar);\r\n\r\n        fakeSettings.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                joystickX = (int) previewJoystick.getJoystickCenterX();\r\n                joystickY = (int) previewJoystick.getJoystickCenterY();\r\n\r\n                FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) fakeButton.getLayoutParams();\r\n                buttonAX = fakeButton.getLeft();\r\n                buttonAY = fakeButton.getTop();\r\n\r\n                Log.d(\"POSICIÓN BOTÓN: \", buttonAX + \", \" + buttonAY);\r\n\r\n                // Re-crear el layout con las coordenadas correctas\r\n                crearLayoutJoystick(); // Aquí cargas el layout de uso normal\r\n            }\r\n        });\r\n\r\n        // Añadir todos los elementos al layout principal\r\n        mainLayout.addView(previewJoystick);\r\n        mainLayout.addView(fakeButton);\r\n        mainLayout.addView(fakeSettings);\r\n\r\n        return mainLayout;\r\n    }\r\n\r\n    /**\r\n     * Función que obtiene el joystickview para su edición\r\n     *\r\n     * @param mainLayout\r\n     * @return JoystickView\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @NonNull\r\n    private JoystickView getPreviewJoystick(FrameLayout mainLayout) {\r\n        JoystickView previewJoystick = new JoystickView(this);\r\n        FrameLayout.LayoutParams joystickParams = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n        previewJoystick.setLayoutParams(joystickParams);\r\n\r\n        // Restaurar centro del joystick (coordenadas absolutas que guardaste)\r\n        previewJoystick.setJoystickCenter(joystickX, joystickY);\r\n\r\n        previewJoystick.setOnTouchListener(new View.OnTouchListener() {\r\n            float offsetX, offsetY;\r\n\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                int[] location = new int[2];\r\n                mainLayout.getLocationOnScreen(location);\r\n                float parentX = event.getRawX() - location[0];\r\n                float parentY = event.getRawY() - location[1];\r\n\r\n                switch (event.getAction()) {\r\n                    case MotionEvent.ACTION_DOWN:\r\n                        offsetX = parentX;\r\n                        offsetY = parentY;\r\n                        return true;\r\n\r\n                    case MotionEvent.ACTION_MOVE:\r\n                        previewJoystick.setJoystickCenter(parentX, parentY); // Mover el joystick\r\n                        joystickX = (int) parentX; // Actualiza la posición del joystick\r\n                        joystickY = (int) parentY; // Actualiza la posición del joystick\r\n                        return true;\r\n\r\n                    case MotionEvent.ACTION_UP:\r\n                        joystickX = (int) parentX; // Guarda la posición final del joystick\r\n                        joystickY = (int) parentY;\r\n                        return true;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        return previewJoystick;\r\n    }\r\n\r\n\r\n    /**\r\n     * Función para restaurar las posiciones de los botones del layout del joystick.\r\n     *\r\n     * @param joystickParams\r\n     * @param buttonParams\r\n     */\r\n    private void restaurarPosiciones(FrameLayout.LayoutParams joystickParams, FrameLayout.LayoutParams buttonParams) {\r\n        if (joystickParams != null) {\r\n            joystickParams.leftMargin = joystickX;\r\n            joystickParams.topMargin = joystickY;\r\n        }\r\n        if (buttonParams != null) {\r\n            buttonParams.leftMargin = buttonAX;\r\n            buttonParams.topMargin = buttonAY;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Función para iniciar la conexión con el servidor del juego\r\n     */\r\n    private void startConnection() {\r\n        Thread connectionThread = new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                // Inicia la conexión al servidor\r\n                discoverPCAndConnect();\r\n            }\r\n        });\r\n        connectionThread.start();\r\n    }\r\n\r\n    /**\r\n     * Función para encontrar la ip del servidor del juego.\r\n     */\r\n    private void discoverPCAndConnect() {\r\n        new Thread(() -> {\r\n            try (DatagramSocket socket = new DatagramSocket(9999)) {\r\n                socket.setSoTimeout(10000); // Espera hasta 10 segundos\r\n                byte[] buffer = new byte[1024];\r\n                DatagramPacket packet = new DatagramPacket(buffer, buffer.length);\r\n\r\n                Log.d(\"DISCOVERY\", \"Esperando broadcast de PC...\");\r\n                while (!isConnected) {\r\n                    try {\r\n                        socket.receive(packet);  // Intentar recibir el paquete\r\n                        String mensaje = new String(packet.getData(), 0, packet.getLength());\r\n                        if (mensaje.equals(\"PC_HOLA\")) {\r\n                            String pcIP = packet.getAddress().getHostAddress();\r\n                            Log.d(\"DISCOVERY\", \"IP del PC detectada: \" + pcIP);\r\n                            initConnection(pcIP);  // ← tu método para conectar\r\n                            isConnected = true;\r\n                            Log.d(\"CONECTADO!!\", isConnected + \"\");\r\n                        }\r\n                    } catch (SocketTimeoutException e) {\r\n                        // Si se ha agotado el tiempo de espera, puedes intentar nuevamente\r\n                        Log.d(\"DISCOVERY\", \"Tiempo de espera agotado. Reintentando...\");\r\n                    }\r\n                }\r\n                startSendingVector();\r\n            } catch (IOException e) {\r\n                Log.e(\"DISCOVERY\", \"No se pudo recibir broadcast: \" + e.getMessage());\r\n            }\r\n        }).start();\r\n    }\r\n\r\n\r\n    /**\r\n     * Función para inciar la conexión con la ip del servidor que nos pasan por parámetro.\r\n     *\r\n     * @param pcIp\r\n     */\r\n    public void initConnection(String pcIp) {\r\n        Log.d(\"InitConection\", \"Conectando...\");\r\n\r\n        try {\r\n            this.socket = new Socket(pcIp, 10000);  // Conectar al servidor\r\n            // Crear ObjectOutputStream primero\r\n            oos = new ObjectOutputStream(socket.getOutputStream());\r\n            oos.flush();\r\n            Log.d(\"InitConection\", \"Conexión establecida con el servidor.\");\r\n        } catch (IOException e) {\r\n            Log.e(\"Error\", \"Error al conectar: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Función para iniciar el servidor del mando\r\n     */\r\n    private void startServer() {\r\n        server = new CommsController(this);\r\n        Thread serverTh = new Thread(server);\r\n        serverTh.start();\r\n    }\r\n\r\n    /**\r\n     * Función para que el mando (teléfono) vibre.\r\n     */\r\n    public void vibration() {\r\n        Vibrator vibrator = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);\r\n        long vibrate[] = {0, 100, 200, 300};\r\n        vibrator.vibrate(vibrate, -1);\r\n    }\r\n\r\n    /**\r\n     * Función que sirve para enviar el objeto Vector velocidad que se calcula en el Joystick.\r\n     */\r\n    private void startSendingVector() {\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                Log.d(\"OOS NULL? \", (oos == null) + \"\");\r\n                Log.d(\"JOYSTICK?\", isJoystickView + \"\");\r\n                Log.d(\"IS CONNECTED? \", isConnected + \"\");\r\n                while (isJoystickView) {\r\n                    try {\r\n                        if (oos != null && isConnected) {\r\n                            // Obtener los valores de la velocidad desde el joystick\r\n                            Vector velocidad = joystickView.getVelocity();\r\n                            Message msg = new Message(\"velocidad_nave\", velocidad);\r\n                            //Log.d(\"ENVIANDO...\", msg.toGson());\r\n                            sendMessageGson(msg.toGson());\r\n                        }\r\n                        // Espera de 16ms antes de enviar el siguiente mensaje\r\n                        Thread.sleep(16);\r\n                    } catch (InterruptedException e) {\r\n                        Log.e(\"Error\", \"Error al esperar en el hilo: \" + e.getMessage());\r\n                        break; // Salir del bucle si hay una excepción\r\n                    }\r\n                }\r\n            }\r\n        }).start(); // Inicia el hilo\r\n    }\r\n\r\n    /**\r\n     * Función para enviar un mensaje al cliente.\r\n     * Es necesario crear un hilo porque Android Studio no permite operaciones de red dentro\r\n     * del hilo principal. Por lo tanto, para enviar el mensaje, creo un hilo que envía el mensaje.\r\n     *\r\n     * @param msg\r\n     */\r\n    public void sendMessageGson(String msg) {\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                synchronized (oos) {\r\n                    try {\r\n                        if (oos != null) {\r\n                            Log.d(\"MENSAJE: \", msg);\r\n                            oos.writeObject(msg);\r\n                            oos.flush();\r\n                        }\r\n                    } catch (IOException e) {\r\n                        Log.e(\"Error\", \"Error al enviar el mensaje: \" + e.getMessage());\r\n                    }\r\n                }\r\n            }\r\n        }).start();\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        try {\r\n            if (oos != null) oos.close();\r\n            if (socket != null) socket.close();\r\n            if (mediaPlayer != null) {\r\n                mediaPlayer.release();\r\n                mediaPlayer = null;\r\n            }\r\n        } catch (IOException e) {\r\n            Log.e(\"Error\", \"Error al cerrar el socket: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Función que indica que la partida ha finalizado\r\n     * y nos da la opción de cerrar el juego o de reiniciar la partida.\r\n     */\r\n    public void gameOver() {\r\n        new AlertDialog.Builder(this).setTitle(\"Game Over\").setMessage(\"¿Qué deseas hacer?\").setCancelable(false).setPositiveButton(\"Reiniciar\", (dialog, which) -> reiniciarJuego()).setNegativeButton(\"Salir\", (dialog, which) -> salir()).show();\r\n    }\r\n\r\n    /**\r\n     * Función para salir del mando\r\n     */\r\n    public void salir() {\r\n        new Thread(() -> {\r\n            try {\r\n                if (oos != null) {\r\n                    String exitMsg = new Message(\"EXIT\", \"EXIT\").toGson();\r\n                    Log.d(\"MENSAJE: \", exitMsg);\r\n                    synchronized (oos) {\r\n                        oos.writeObject(exitMsg);\r\n                        oos.flush();\r\n                    }\r\n                    oos.close();\r\n                    socket.close();\r\n                    controllerInitialized = false;\r\n                    isConnected = false;\r\n                    server.close();\r\n                    Thread.sleep(500);\r\n                    startConnectionP2P();\r\n                }\r\n            } catch (IOException | InterruptedException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }).start();\r\n    }\r\n\r\n\r\n    /**\r\n     * Función para reiniciar la partida\r\n     */\r\n    private void reiniciarJuego() {\r\n        Log.d(\"REINICIAR!!!!!\", \"REINICIAR!!!!!\");\r\n        sendMessageGson(new Message(\"reset\", \"reset\").toGson());\r\n        initRemoteController();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mando/MainActivity.java b/app/src/main/java/com/example/mando/MainActivity.java
--- a/app/src/main/java/com/example/mando/MainActivity.java	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/app/src/main/java/com/example/mando/MainActivity.java	(date 1747312249559)
@@ -4,11 +4,16 @@
 import android.app.AlertDialog;
 import android.content.Context;
 import android.graphics.Color;
+import android.graphics.PorterDuff;
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.LayerDrawable;
 import android.media.AudioManager;
 import android.media.MediaPlayer;
 import android.media.SoundPool;
+import android.net.wifi.WifiManager;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.CountDownTimer;
 import android.os.Handler;
 import android.os.VibrationEffect;
 import android.os.Vibrator;
@@ -19,11 +24,15 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
+import android.widget.EditText;
 import android.widget.FrameLayout;
 import android.widget.ImageButton;
+import android.widget.ProgressBar;
+import android.widget.TextView;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.graphics.drawable.DrawableCompat;
 
 import com.google.gson.Gson;
 
@@ -33,6 +42,7 @@
 import java.net.DatagramSocket;
 import java.net.Socket;
 import java.net.SocketTimeoutException;
+import java.util.Locale;
 
 public class MainActivity extends AppCompatActivity {
     // DECLARACIÓN DE VARIABLES
@@ -43,6 +53,8 @@
     private CommsController server;
     // Joystick
     private boolean isJoystickView = true;
+    private float vida;
+    private ProgressBar barraVida;
     private boolean isCarView = false;
     private JoystickView joystickView;
     // Reproductor de sonido
@@ -73,13 +85,15 @@
     private boolean carLayoutInitialized = false;
     private boolean controllerInitialized = false;
     private boolean isMarchaAtras = false;
-
+    private TextView textoCuentaAtras;
+    private CountDownTimer countDownTimer;
     // Atributos OnTouch layout carreras
     private float velocidad = 0f;
     private final Handler handler = new Handler();
     private final Runnable[] aceleradorRunnable = new Runnable[1];
     private final Runnable[] frenoRunnable = new Runnable[1];
     private float ultimoAngulo = Float.NaN;
+    private int vidaMaxima;
 
 
     @SuppressLint({"UseCompatLoadingForDrawables"})
@@ -281,6 +295,7 @@
      */
     @SuppressLint("ClickableViewAccessibility")
     private void initCarLayout() {
+        textoCuentaAtras = findViewById(R.id.textoCuentaAtras);
         isJoystickView = false;
         isCarView = true;
         // Configurar el botón de Settings
@@ -542,6 +557,34 @@
         });
     }
 
+    public void setLifeBar(float vida) {
+        this.vida = vida;
+        Log.d("NUEVA VIDA DE LA NAVE!!! ", vida + "");
+        // Asegurar que la barra muestre bien el valor
+        barraVida.setProgress((int) this.vida);
+
+        // Cambiar color según el porcentaje
+        int color;
+        if (vida <= 10) {
+            color = Color.RED;
+        } else if (vida <= 50) {
+            color = Color.YELLOW;
+        } else {
+            color = Color.GREEN;
+        }
+
+        // Cambiar dinámicamente el color del drawable
+        LayerDrawable drawable = (LayerDrawable) barraVida.getProgressDrawable();
+        Drawable progress = drawable.findDrawableByLayerId(android.R.id.progress);
+        DrawableCompat.setTint(progress, color);
+
+    }
+
+
+    public void setVidaMaxima(int vida) {
+        this.vidaMaxima = vida;
+        setLifeBar(this.vidaMaxima);
+    }
 
     /**
      * Función para crear el layout del Joystick.
@@ -552,6 +595,9 @@
         mediaPlayer = MediaPlayer.create(this, R.raw.laser_gunshot);
         mediaPlayer.setLooping(false);
 
+        barraVida = findViewById(R.id.lifeBar);
+        setLifeBar(this.vida);
+
         FrameLayout mainLayout = new FrameLayout(this);
         mainLayout.setLayoutParams(new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
         //mainLayout.setBackground(getDrawable(R.drawable.space_background));
@@ -567,7 +613,14 @@
         joystickParams.gravity = Gravity.CENTER;
         joystickView.setLayoutParams(joystickParams);
 
-        mainLayout.addView(joystickView); // Añadir el joystick al layout
+        mainLayout.addView(joystickView);
+
+        ViewGroup parent = (ViewGroup) barraVida.getParent();
+        if (parent != null) {
+            parent.removeView(barraVida);
+        }
+        mainLayout.addView(barraVida);
+
 
         // Aplicar el centro del joystick
         joystickView.post(new Runnable() {
@@ -793,6 +846,10 @@
      */
     private void discoverPCAndConnect() {
         new Thread(() -> {
+            WifiManager wifi = (WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE);
+            WifiManager.MulticastLock lock = wifi.createMulticastLock("lock");
+            lock.setReferenceCounted(true);
+            lock.acquire();
             try (DatagramSocket socket = new DatagramSocket(9999)) {
                 socket.setSoTimeout(10000); // Espera hasta 10 segundos
                 byte[] buffer = new byte[1024];
@@ -803,6 +860,7 @@
                     try {
                         socket.receive(packet);  // Intentar recibir el paquete
                         String mensaje = new String(packet.getData(), 0, packet.getLength());
+                        Log.d("BROADCAST!!!!", mensaje);
                         if (mensaje.equals("PC_HOLA")) {
                             String pcIP = packet.getAddress().getHostAddress();
                             Log.d("DISCOVERY", "IP del PC detectada: " + pcIP);
@@ -860,6 +918,10 @@
         vibrator.vibrate(vibrate, -1);
     }
 
+    public void setVidaJoystick() {
+
+    }
+
     /**
      * Función que sirve para enviar el objeto Vector velocidad que se calcula en el Joystick.
      */
@@ -976,4 +1038,28 @@
         sendMessageGson(new Message("reset", "reset").toGson());
         initRemoteController();
     }
+
+    public void setCuentaAtrasMilis(float cuentaAtrasMilis) {
+        if (countDownTimer != null) {
+            countDownTimer.cancel();
+        }
+
+        countDownTimer = new CountDownTimer((long) cuentaAtrasMilis, 1000) {
+            @Override
+            public void onTick(long millisUntilFinished) {
+                int seconds = (int) (millisUntilFinished / 1000);
+                int minutes = seconds / 60;
+                seconds = seconds % 60;
+
+                String timeFormatted = String.format(Locale.getDefault(), "%02d:%02d", minutes, seconds);
+                textoCuentaAtras.setText(timeFormatted);
+            }
+
+            @Override
+            public void onFinish() {
+                textoCuentaAtras.setText("00:00");
+            }
+        }.start();
+    }
+
 }
Index: app/src/main/java/com/example/mando/CommsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mando;\r\n\r\nimport android.util.Log;\r\n\r\nimport com.google.gson.JsonObject;\r\nimport com.google.gson.JsonParser;\r\n\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.net.DatagramPacket;\r\nimport java.net.DatagramSocket;\r\nimport java.net.InetAddress;\r\nimport java.net.InetSocketAddress;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\n\r\n/**\r\n * Clase para la gestión de los mensajes que recibe la app\r\n *\r\n * @author Jesús\r\n */\r\npublic class CommsController implements Runnable {\r\n    private ServerSocket serverSocket;\r\n    private Socket socket;\r\n    private ObjectInputStream ois;\r\n\r\n    private boolean isConnected;\r\n    private volatile boolean shouldRun;\r\n\r\n\r\n    private MainActivity main;\r\n\r\n    public CommsController(MainActivity main) {\r\n        try {\r\n            this.shouldRun = true;\r\n            setConnected(false);\r\n            this.main = main;\r\n            this.serverSocket = new ServerSocket();\r\n            this.serverSocket.setReuseAddress(true);\r\n            this.serverSocket.bind(new InetSocketAddress(11000));\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public synchronized boolean isConnected() {\r\n        return isConnected;\r\n    }\r\n\r\n    public synchronized void setConnected(boolean connected) {\r\n        isConnected = connected;\r\n    }\r\n\r\n    /**\r\n     * Función que acepta la conexión de un cliente al servidor\r\n     */\r\n    public void acceptClient() {\r\n        Log.d(\"SERVIDOR\", \"Servidor escuchando en el puerto 11000...\");\r\n        try {\r\n            socket = serverSocket.accept();\r\n            ois = new ObjectInputStream(socket.getInputStream());\r\n            setConnected(true);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Función que envía un DatagramSocket con el mensaje \"ANDROID_HOLA\" haciendo un broadcast\r\n     * para que el cliente sepa la ip de nuestro servidor.\r\n     */\r\n    private void sendBroadcastDatagram() {\r\n        try {\r\n            DatagramSocket datagramSocket = new DatagramSocket();\r\n            datagramSocket.setBroadcast(true);\r\n            String mensaje = \"ANDROID_HOLA\";\r\n            byte[] buffer = mensaje.getBytes();\r\n\r\n            while (socket == null) { // Solo mientras no haya conexión\r\n                DatagramPacket packet = new DatagramPacket(buffer, buffer.length, InetAddress.getByName(\"255.255.255.255\"), 8888);\r\n                datagramSocket.send(packet);\r\n                Thread.sleep(2000); // Enviar cada 2 segundos\r\n            }\r\n\r\n            datagramSocket.close();\r\n        } catch (Exception e) {\r\n            Log.e(\"UDP_BROADCAST\", \"Error al enviar broadcast\", e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Función que recibe un mensaje y lo según su tipo, ejecuta otras funciones\r\n     */\r\n    private void readMessage() {\r\n        if (ois != null) {\r\n            try {\r\n                String jsonMessage = (String) ois.readObject();\r\n                JsonObject jsonObject = JsonParser.parseString(jsonMessage).getAsJsonObject();\r\n                String type = jsonObject.get(\"type\").getAsString();\r\n                switch (type) {\r\n                    case \"vibration\":\r\n                        main.vibration();\r\n                        break;\r\n                    case \"aumentar_contador\":\r\n                        break;\r\n                    case \"GAME_OVER\":\r\n                        main.runOnUiThread(() -> main.gameOver());\r\n                        break;\r\n                    default:\r\n                        Log.d(\"MENSAJE ERRÓNEO\", \"Mensaje erróneo.\");\r\n                        break;\r\n                }\r\n            } catch (Exception e) {\r\n                Log.e(\"ERROR_MENSAJE\", \"Fallo en lectura del mensaje\", e);\r\n            }\r\n        }\r\n        try {\r\n            Thread.sleep(50);\r\n        } catch (InterruptedException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Función que lanza un broadcast para encontrar al cliente, acepta la petición y\r\n     * mientras haya conexión, lee los posibles mensajes que nos mande\r\n     */\r\n    @Override\r\n    public void run() {\r\n        new Thread(this::sendBroadcastDatagram).start();\r\n        acceptClient();\r\n        while (isConnected() && shouldRun) {\r\n            readMessage();\r\n        }\r\n    }\r\n\r\n    public void close() {\r\n        try {\r\n            setConnected(false);\r\n            this.shouldRun = false;\r\n            if (this.ois != null) this.ois.close();\r\n            if (this.socket != null && !this.socket.isClosed()) this.socket.close();\r\n            if (this.serverSocket != null && !this.serverSocket.isClosed()) this.serverSocket.close();\r\n\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mando/CommsController.java b/app/src/main/java/com/example/mando/CommsController.java
--- a/app/src/main/java/com/example/mando/CommsController.java	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/app/src/main/java/com/example/mando/CommsController.java	(date 1747312249557)
@@ -98,6 +98,8 @@
                 String jsonMessage = (String) ois.readObject();
                 JsonObject jsonObject = JsonParser.parseString(jsonMessage).getAsJsonObject();
                 String type = jsonObject.get("type").getAsString();
+                String obj = jsonObject.get("obj").getAsString();
+                Log.d("MENSAJE RECIBIDO!!!", type + " - " + obj);
                 switch (type) {
                     case "vibration":
                         main.vibration();
@@ -107,8 +109,16 @@
                     case "GAME_OVER":
                         main.runOnUiThread(() -> main.gameOver());
                         break;
+                    case "vida_inicial":
+                        main.setVidaMaxima((int)Double.parseDouble(obj));
+                        break;
+                    case "vida":
+                        main.setLifeBar((int)Double.parseDouble(obj));
+                        break;
+                    case "cuenta_atras":
+                        main.setCuentaAtrasMilis(Float.parseFloat(obj));
                     default:
-                        Log.d("MENSAJE ERRÓNEO", "Mensaje erróneo.");
+                        Log.d("NUEVO MENSAJE!!!", type);
                         break;
                 }
             } catch (Exception e) {
@@ -141,7 +151,8 @@
             this.shouldRun = false;
             if (this.ois != null) this.ois.close();
             if (this.socket != null && !this.socket.isClosed()) this.socket.close();
-            if (this.serverSocket != null && !this.serverSocket.isClosed()) this.serverSocket.close();
+            if (this.serverSocket != null && !this.serverSocket.isClosed())
+                this.serverSocket.close();
 
         } catch (IOException e) {
             throw new RuntimeException(e);
Index: ../src/tfgbola/TFGMoverObjetosMando.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template\r\n */\r\npackage tfgbola;\r\n\r\nimport tfgbola.comms.CommsController;\r\nimport tfgbola.main.MainController;\r\nimport tfgbola.main.objects.Vector;\r\n\r\n/**\r\n *\r\n * @author jesus\r\n */\r\npublic class TFGMoverObjetosMando {\r\n\r\n    private CommsController comms;\r\n    private MainController main;\r\n\r\n    public TFGMoverObjetosMando() {\r\n        comms = new CommsController(this);\r\n        main = new MainController(this);\r\n        Thread thComms = new Thread(comms);\r\n        thComms.start();\r\n    }\r\n\r\n    public void getMsg(String msg) {\r\n        System.out.println(msg);\r\n    }\r\n\r\n    public void getVelocidadNave(Vector velocidad) {\r\n        main.setVelocidadNave(velocidad);\r\n    }\r\n\r\n    public void setCarVelocidad(float velocidad) {\r\n        main.setCarVelocidad(velocidad);\r\n    }\r\n\r\n    public void setCarAngle(float angulo) {\r\n        main.setCarAngle(angulo);\r\n    }\r\n\r\n    public void setAction(String action) {\r\n        this.main.setAction(action);\r\n    }\r\n\r\n    public void sendGameOver() {\r\n        this.comms.sendMessage(\"GAME_OVER\", \"GAME_OVER\");\r\n    }\r\n    \r\n    public void reiniciar(){\r\n        this.main.reiniciarJuego();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        // TODO code application logic here\r\n        new TFGMoverObjetosMando();\r\n    }\r\n\r\n    public void close() {\r\n        System.exit(0);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../src/tfgbola/TFGMoverObjetosMando.java b/../src/tfgbola/TFGMoverObjetosMando.java
--- a/../src/tfgbola/TFGMoverObjetosMando.java	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../src/tfgbola/TFGMoverObjetosMando.java	(date 1747312249562)
@@ -22,6 +22,8 @@
         main = new MainController(this);
         Thread thComms = new Thread(comms);
         thComms.start();
+        sendNaveInitMessages();
+        sendRacingCarInitMessages();
     }
 
     public void getMsg(String msg) {
@@ -51,6 +53,19 @@
     public void reiniciar(){
         this.main.reiniciarJuego();
     }
+    
+    public void sendVidaNave(int vida){
+        System.out.println("NEW VIDA: " + vida);
+        this.comms.sendMessage("vida", vida);
+    }
+    
+    public void sendNaveInitMessages(){
+        this.comms.sendNaveInitMessages(this.main.getVidaNave(), true);
+    }
+    
+    public void sendRacingCarInitMessages(){
+        this.comms.sendRacingCarInitMessages(this.main.getCuentaAtras());
+    }
 
     public static void main(String[] args) {
         // TODO code application logic here
Index: ../src/tfgbola/main/objects/Nave.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template\r\n */\r\npackage tfgbola.main.objects;\r\n\r\nimport java.awt.Graphics;\r\nimport java.awt.Graphics2D;\r\nimport java.awt.geom.AffineTransform;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\nimport tfgbola.main.MainModel;\r\n\r\n/**\r\n *\r\n * @author jesus\r\n */\r\npublic class Nave extends VODynamic implements Runnable {\r\n\r\n    private double radio;\r\n\r\n    private double vida;\r\n\r\n    public static final Vector VELOCIDAD_MAXIMA = new Vector(4, 4);\r\n\r\n    private MainModel model;\r\n\r\n    public Nave() {\r\n        super();\r\n        this.radio = 15;\r\n        this.vida = 100;\r\n    }\r\n\r\n    public double getRadio() {\r\n        return radio;\r\n    }\r\n\r\n    public void setRadio(double radio) {\r\n        this.radio = radio;\r\n    }\r\n\r\n    public void setModel(MainModel model) {\r\n        this.model = model;\r\n    }\r\n\r\n    @Override\r\n    public Vector getPosicion() {\r\n        return super.getPosicion();\r\n    }\r\n\r\n    @Override\r\n    public void setPosicion(Vector posicion) {\r\n        super.setPosicion(posicion);\r\n    }\r\n\r\n    public double getDiam() {\r\n        return (this.radio * 2);\r\n    }\r\n\r\n    public synchronized void damage(double dmg) {\r\n        this.vida -= dmg;\r\n        if(this.vida <= 0){\r\n            this.vida = 0;\r\n            this.explode();\r\n        }\r\n    }\r\n\r\n    public double getVida() {\r\n        return vida;\r\n    }\r\n\r\n    public void setVida(double vida) {\r\n        this.vida = vida;\r\n    }\r\n\r\n    @Override\r\n    public void disparar() {\r\n        // Obtener la velocidad actual de la nave\r\n        Vector velocidadBala = this.getVelocidad();\r\n        velocidadBala.setX(velocidadBala.getX() * 0.7);\r\n        velocidadBala.setY(velocidadBala.getY() * 0.7);\r\n        // Si la nave está quieta, usar la dirección basada en el ángulo de rotación\r\n        if (velocidadBala.getX() == 0 && velocidadBala.getY() == 0) {\r\n            double velocidadMagnitud = 2;\r\n            // Convertir el ángulo a radianes\r\n            double anguloRad = Math.toRadians(this.anguloRotacion - 90);\r\n            // Calcular los componentes de la velocidad\r\n            double velX = velocidadMagnitud * Math.cos(anguloRad);\r\n            double velY = velocidadMagnitud * Math.sin(anguloRad);\r\n            // Crear el nuevo vector de velocidad para la bala\r\n            velocidadBala = new Vector(velX, velY);\r\n        }\r\n        // Crear la bala con la velocidad ajustada\r\n        Bala bala = new Bala(velocidadBala);\r\n        bala.setModel(model);\r\n        bala.setPosicion(this.getPosicion());\r\n        // Añadir la bala al modelo\r\n        this.model.addBala(bala);\r\n        // Iniciar el hilo de la bala\r\n        Thread thBala = new Thread(bala);\r\n        thBala.start();\r\n    }\r\n\r\n    @Override\r\n    public double calcularAngulo() {\r\n        // Verifica que la velocidad no esté en (0, 0)\r\n        if (getVelocidad().getX() != 0 || getVelocidad().getY() != 0) {\r\n            // Calcula el ángulo en radianes usando atan2 (y, x)\r\n            double angulo = Math.atan2(getVelocidad().getY(), getVelocidad().getX());\r\n            angulo += Math.PI / 2;\r\n            anguloRotacionPersistente = angulo;\r\n            return angulo;\r\n        }\r\n        return anguloRotacionPersistente; // Si la velocidad es 0, no se rota\r\n    }\r\n\r\n    @Override\r\n    public void rotate() {\r\n        // Calcular el ángulo de la dirección del movimiento\r\n        double angulo = calcularAngulo();\r\n        // Convertir de radianes a grados\r\n        this.anguloRotacion = Math.toDegrees(angulo);\r\n    }\r\n\r\n    public void setAction(String action) {\r\n        switch (action) {\r\n            case \"dispara\":\r\n                disparar();\r\n                break;\r\n            default:\r\n                System.out.println(\"ACCIONES ADICIONALES SIN ESPECIFICAR...\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void pintar(Graphics g) {\r\n        if (super.getImage() != null) {\r\n            // Asegurarse de que el ángulo está actualizado\r\n            rotate();  // Llamar al método para actualizar el ángulo de rotación\r\n\r\n            // Calcular la posición de la imagen\r\n            int posicionX = (int) (this.getPosicion().getX() - this.getRadio());\r\n            int posicionY = (int) (this.getPosicion().getY() - this.getRadio());\r\n\r\n            // Crear un Graphics2D para poder hacer rotaciones\r\n            Graphics2D g2d = (Graphics2D) g;\r\n\r\n            // Guardar el estado original de la transformación\r\n            AffineTransform originalTransform = g2d.getTransform();\r\n\r\n            // Rotar la imagen alrededor de su centro\r\n            g2d.rotate(Math.toRadians(this.anguloRotacion), this.getPosicion().getX(), this.getPosicion().getY());\r\n\r\n            // Dibujar la imagen rotada\r\n            g2d.drawImage(super.getImage(), posicionX, posicionY, (int) this.getDiam(), (int) this.getDiam(), null);\r\n\r\n            // Restaurar el estado original de la transformación para evitar afectar otros objetos\r\n            g2d.setTransform(originalTransform);\r\n        }\r\n        mover();  // Mueve el objeto\r\n    }\r\n\r\n    @Override\r\n    public synchronized void mover() {\r\n        if (Math.abs(getVelocidad().getX()) >= VELOCIDAD_MAXIMA.getX()) {\r\n            if (getVelocidad().getX() > 0) {\r\n                getVelocidad().setX(VELOCIDAD_MAXIMA.getX());\r\n            } else {\r\n                getVelocidad().setX(VELOCIDAD_MAXIMA.getX() * -1);\r\n            }\r\n        }\r\n        if (Math.abs(getVelocidad().getY()) >= VELOCIDAD_MAXIMA.getX()) {\r\n            if (getVelocidad().getY() > 0) {\r\n                getVelocidad().setY(VELOCIDAD_MAXIMA.getY());\r\n            } else {\r\n                getVelocidad().setY(VELOCIDAD_MAXIMA.getY() * -1);\r\n            }\r\n        }\r\n        super.setPosicion(model.calcNewPositions(this));\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        while (this.isIsAlive()) {\r\n            try {\r\n                mover();\r\n                Thread.sleep(16);\r\n            } catch (InterruptedException ex) {\r\n                Logger.getLogger(Nave.class.getName()).log(Level.SEVERE, null, ex);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../src/tfgbola/main/objects/Nave.java b/../src/tfgbola/main/objects/Nave.java
--- a/../src/tfgbola/main/objects/Nave.java	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../src/tfgbola/main/objects/Nave.java	(date 1747312249565)
@@ -19,7 +19,7 @@
 
     private double radio;
 
-    private double vida;
+    private int vida;
 
     public static final Vector VELOCIDAD_MAXIMA = new Vector(4, 4);
 
@@ -65,11 +65,11 @@
         }
     }
 
-    public double getVida() {
+    public int getVida() {
         return vida;
     }
 
-    public void setVida(double vida) {
+    public void setVida(int vida) {
         this.vida = vida;
     }
 
Index: ../build/built-jar.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Wed, 14 May 2025 11:36:58 +0200\r\n\r\n\r\nC\\:\\\\Users\\\\Nitropc\\\\Desktop\\\\TFGMando-main\\\\TFGMando-main\\\\TFGBola=\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../build/built-jar.properties b/../build/built-jar.properties
--- a/../build/built-jar.properties	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../build/built-jar.properties	(date 1747312249549)
@@ -1,4 +1,4 @@
-#Wed, 14 May 2025 11:36:58 +0200
+#Thu, 15 May 2025 12:42:34 +0200
 
 
-C\:\\Users\\Nitropc\\Desktop\\TFGMando-main\\TFGMando-main\\TFGBola=
+C\:\\Users\\jesus\\Desktop\\FPDAM2\\TFG_REAL\\TFG-Mando-Android-Studio\\TFGBola=
Index: ../src/tfgbola/comms/CommsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template\r\n */\r\npackage tfgbola.comms;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.JsonObject;\r\nimport com.google.gson.JsonParser;\r\nimport java.io.*;\r\nimport java.net.*;\r\nimport java.util.logging.*;\r\nimport tfgbola.TFGMoverObjetosMando;\r\nimport tfgbola.main.objects.Message;\r\nimport tfgbola.main.objects.Vector;\r\n\r\npublic class CommsController implements Runnable {\r\n\r\n    private ServerSocket serverSocket;\r\n    private Socket socket, socketRemoteController;\r\n    private ObjectInputStream ois;\r\n    private ObjectOutputStream oos;\r\n    private TFGMoverObjetosMando main;\r\n\r\n    public CommsController(TFGMoverObjetosMando aThis) {\r\n        try {\r\n            main = aThis;\r\n            this.serverSocket = new ServerSocket(10000);\r\n            broadcastToAndroid();\r\n            connectWithRemoteController();\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(CommsController.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n\r\n    public void connectWithRemoteController() {\r\n        String ipServer = discoverAndroidIp(); // IP del servidor AndroidStudio\r\n        if (ipServer == null) {\r\n            System.out.println(\"CONEXIÓN NO ESTABLECIDA! \"\r\n                    + \"NO SE PUDO ENCONTRAR LA IP DEL SERVIDOR ANDROID\");\r\n            connectWithRemoteController();\r\n        }\r\n        try {\r\n            System.out.println(\"Conectando...\");\r\n            this.socketRemoteController = new Socket(ipServer, 11000);\r\n            oos = new ObjectOutputStream(socketRemoteController.getOutputStream());\r\n            oos.flush();\r\n            System.out.println(\"Conexión establecida con el servidor en el puerto 11000!\");\r\n            sendMessage(\"vibration\", \"vibration\");\r\n        } catch (IOException ex) {\r\n            System.out.println(\"CONEXIÓN NO ESTABLECIDA!!!!\");\r\n            connectWithRemoteController();\r\n        }\r\n    }\r\n\r\n    public void sendMessage(String type, String msg) {\r\n        Message message = new Message(type, msg);\r\n        if (oos != null) {\r\n            try {\r\n                oos.writeObject(message.toGson());\r\n                oos.flush();\r\n                System.out.println(\"Mensaje enviado correctamente.\");\r\n            } catch (IOException ex) {\r\n                Logger.getLogger(CommsController.class.getName()).log(Level.SEVERE, null, ex);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void acceptClient() {\r\n        try {\r\n            System.out.println(\"Servidor escuchando en el puerto 10000...\");\r\n            socket = serverSocket.accept();  // Aceptar conexión del cliente\r\n            System.out.println(\"Conexión aceptada: \" + socket.getInetAddress());\r\n            ois = new ObjectInputStream(socket.getInputStream());\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(CommsController.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n\r\n    private String discoverAndroidIp() {\r\n        try (DatagramSocket socket = new DatagramSocket(8888)) {\r\n            socket.setSoTimeout(10000); // Espera hasta 10 segundos\r\n            byte[] buffer = new byte[1024];\r\n            DatagramPacket packet = new DatagramPacket(buffer, buffer.length);\r\n\r\n            System.out.println(\"Esperando broadcast desde Android...\");\r\n            socket.receive(packet);  // Bloquea hasta recibir\r\n\r\n            String mensaje = new String(packet.getData(), 0, packet.getLength());\r\n            if (mensaje.equals(\"ANDROID_HOLA\")) {\r\n                String ipDescubierta = packet.getAddress().getHostAddress();\r\n                System.out.println(\"Mensaje de Android recibido. IP: \" + ipDescubierta);\r\n                return ipDescubierta;\r\n            }\r\n        } catch (IOException e) {\r\n            System.out.println(\"Error al recibir broadcast: \" + e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void broadcastToAndroid() {\r\n        try (DatagramSocket datagramSocket = new DatagramSocket()) {\r\n            datagramSocket.setBroadcast(true);\r\n            String mensaje = \"PC_HOLA\";\r\n            byte[] buffer = mensaje.getBytes();\r\n            DatagramPacket packet = new DatagramPacket(\r\n                    buffer, buffer.length, InetAddress.getByName(\"255.255.255.255\"), 9999\r\n            );\r\n            datagramSocket.send(packet);\r\n            System.out.println(\"Broadcast enviado a Android: PC_HOLA\");\r\n        } catch (IOException e) {\r\n            System.out.println(\"Error enviando broadcast a Android: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        while (true) {\r\n            acceptClient();  // Aceptar la conexión del cliente\r\n            while (true) {\r\n                if (ois != null) {\r\n                    try {\r\n                        // Leer la cadena JSON desde el ObjectInputStream\r\n                        String jsonMessage = (String) ois.readObject();\r\n\r\n                        // Convertir la cadena JSON en un JsonObject\r\n                        Gson gson = new Gson();\r\n                        JsonObject jsonObject = JsonParser.parseString(jsonMessage).getAsJsonObject();\r\n\r\n                        // Extraer el campo \"type\"\r\n                        String type = jsonObject.get(\"type\").getAsString();\r\n\r\n                        switch (type) {\r\n                            case \"velocidad_nave\": // Extraer el objeto \"obj\" y convertirlo en un Vector\r\n                                Vector velocidad = gson.fromJson(jsonObject.get(\"obj\"), Vector.class);\r\n                                // Imprimir los valores de velocidad\r\n                                main.getVelocidadNave(velocidad);\r\n                                break;\r\n                            case \"action\":\r\n                                main.setAction(gson.fromJson(jsonObject.get(\"obj\"), String.class));\r\n                                break;\r\n                            case \"angle_car\":\r\n                                //System.out.println(\"ANGULO DE ROTACION: \" + gson.fromJson(jsonObject.get(\"obj\"), String.class));\r\n                                main.setCarAngle(Float.parseFloat(gson.fromJson(jsonObject.get(\"obj\"), String.class)));\r\n                                break;\r\n                            case \"velocidad_car\":\r\n                                //System.out.println(\"VELOCIDAD DEL COCHE: \" + gson.fromJson(jsonObject.get(\"obj\"), String.class));\r\n                                main.setCarVelocidad(Float.parseFloat(gson.fromJson(jsonObject.get(\"obj\"), String.class)));\r\n                                break;\r\n                            case \"reset\":\r\n                                System.out.println(\"RESET!!\");\r\n                                main.reiniciar();\r\n                                break;\r\n                            case \"EXIT\":\r\n                                System.out.println(\"EXIT!!\");\r\n                                this.close();\r\n                        }\r\n\r\n                    } catch (EOFException e) {\r\n                        System.out.println(\"Cliente desconectado.\");\r\n                        break;  // Salir del loop y esperar un nuevo cliente\r\n                    } catch (SocketException e) {\r\n                        System.out.println(\"Conexión cerrada abruptamente.\");\r\n                        break;\r\n                    } catch (IOException | ClassNotFoundException e) {\r\n                        System.out.println(\"Error al recibir el objeto: \" + e.getMessage());\r\n                    }\r\n                }\r\n                try {\r\n                    Thread.sleep(5);\r\n                } catch (InterruptedException ex) {\r\n                    Logger.getLogger(CommsController.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void close() {\r\n        try {\r\n            this.oos.close();\r\n            this.ois.close();\r\n            this.socket.close();\r\n            this.socketRemoteController.close();\r\n            this.main.close();\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(CommsController.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../src/tfgbola/comms/CommsController.java b/../src/tfgbola/comms/CommsController.java
--- a/../src/tfgbola/comms/CommsController.java	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../src/tfgbola/comms/CommsController.java	(date 1747312249564)
@@ -28,6 +28,7 @@
             this.serverSocket = new ServerSocket(10000);
             broadcastToAndroid();
             connectWithRemoteController();
+            
         } catch (IOException ex) {
             Logger.getLogger(CommsController.class.getName()).log(Level.SEVERE, null, ex);
         }
@@ -46,14 +47,24 @@
             oos = new ObjectOutputStream(socketRemoteController.getOutputStream());
             oos.flush();
             System.out.println("Conexión establecida con el servidor en el puerto 11000!");
-            sendMessage("vibration", "vibration");
         } catch (IOException ex) {
             System.out.println("CONEXIÓN NO ESTABLECIDA!!!!");
             connectWithRemoteController();
         }
     }
+    
+    public void sendNaveInitMessages(double vida, boolean hasScore){
+        sendMessage("vibration", "vibration");
+        sendMessage("vida_inicial", vida);
+        sendMessage("hasScore", hasScore);
+    }
+    
+    public void sendRacingCarInitMessages(float cuentaAtras){
+        sendMessage("vibration", "vibration");
+        sendMessage("cuenta_atras", cuentaAtras);
+    }
 
-    public void sendMessage(String type, String msg) {
+    public void sendMessage(String type, Object msg) {
         Message message = new Message(type, msg);
         if (oos != null) {
             try {
@@ -104,7 +115,7 @@
             String mensaje = "PC_HOLA";
             byte[] buffer = mensaje.getBytes();
             DatagramPacket packet = new DatagramPacket(
-                    buffer, buffer.length, InetAddress.getByName("255.255.255.255"), 9999
+                    buffer, buffer.length, InetAddress.getByName("192.168.1.255"), 9999
             );
             datagramSocket.send(packet);
             System.out.println("Broadcast enviado a Android: PC_HOLA");
Index: ../nbproject/build-impl.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!--\r\n*** GENERATED FROM project.xml - DO NOT EDIT  ***\r\n***         EDIT ../build.xml INSTEAD         ***\r\n\r\nFor the purpose of easier reading the script\r\nis divided into following sections:\r\n\r\n  - initialization\r\n  - compilation\r\n  - jar\r\n  - execution\r\n  - debugging\r\n  - javadoc\r\n  - test compilation\r\n  - test execution\r\n  - test debugging\r\n  - applet\r\n  - cleanup\r\n\r\n        -->\r\n<project xmlns:if=\"ant:if\" xmlns:j2seproject1=\"http://www.netbeans.org/ns/j2se-project/1\" xmlns:j2seproject3=\"http://www.netbeans.org/ns/j2se-project/3\" xmlns:jaxrpc=\"http://www.netbeans.org/ns/j2se-project/jax-rpc\" xmlns:unless=\"ant:unless\" basedir=\"..\" default=\"default\" name=\"TFGBola-impl\">\r\n    <fail message=\"Please build using Ant 1.8.0 or higher.\">\r\n        <condition>\r\n            <not>\r\n                <antversion atleast=\"1.8.0\"/>\r\n            </not>\r\n        </condition>\r\n    </fail>\r\n    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"/>\r\n    <!-- \r\n                ======================\r\n                INITIALIZATION SECTION \r\n                ======================\r\n            -->\r\n    <target name=\"-pre-init\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"-pre-init\" name=\"-init-private\">\r\n        <property file=\"nbproject/private/config.properties\"/>\r\n        <property file=\"nbproject/private/configs/${config}.properties\"/>\r\n        <property file=\"nbproject/private/private.properties\"/>\r\n    </target>\r\n    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\r\n        <property file=\"${user.properties.file}\"/>\r\n        <!-- The two properties below are usually overridden -->\r\n        <!-- by the active platform. Just a fallback. -->\r\n        <property name=\"default.javac.source\" value=\"1.8\"/>\r\n        <property name=\"default.javac.target\" value=\"1.8\"/>\r\n    </target>\r\n    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\r\n        <property file=\"nbproject/configs/${config}.properties\"/>\r\n        <property file=\"nbproject/project.properties\"/>\r\n    </target>\r\n    <target name=\"-init-modules-supported\">\r\n        <condition property=\"modules.supported.internal\" value=\"true\">\r\n            <not>\r\n                <matches pattern=\"1\\.[0-8](\\..*)?\" string=\"${javac.source}\"/>\r\n            </not>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-init-modules-supported\" if=\"modules.supported.internal\" name=\"-init-macrodef-modulename\">\r\n        <macrodef name=\"modulename\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute name=\"property\"/>\r\n            <attribute name=\"sourcepath\"/>\r\n            <sequential>\r\n                <loadresource property=\"@{property}\" quiet=\"true\">\r\n                    <javaresource classpath=\"@{sourcepath}\" name=\"module-info.java\" parentFirst=\"false\"/>\r\n                    <filterchain>\r\n                        <stripjavacomments/>\r\n                        <linecontainsregexp>\r\n                            <regexp pattern=\"module .* \\{\"/>\r\n                        </linecontainsregexp>\r\n                        <tokenfilter>\r\n                            <linetokenizer/>\r\n                            <replaceregex flags=\"s\" pattern=\"(\\s*module\\s+)(\\S*)(\\s*\\{.*)\" replace=\"\\2\"/>\r\n                        </tokenfilter>\r\n                        <striplinebreaks/>\r\n                    </filterchain>\r\n                </loadresource>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-modules-supported,-init-macrodef-modulename\" if=\"modules.supported.internal\" name=\"-init-source-module-properties\">\r\n        <fail message=\"Java 9 support requires Ant 1.10.0 or higher.\">\r\n            <condition>\r\n                <not>\r\n                    <antversion atleast=\"1.10.0\"/>\r\n                </not>\r\n            </condition>\r\n        </fail>\r\n        <j2seproject3:modulename property=\"module.name\" sourcepath=\"${src.dir}\"/>\r\n        <condition property=\"named.module.internal\">\r\n            <and>\r\n                <isset property=\"module.name\"/>\r\n                <length length=\"0\" string=\"${module.name}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"unnamed.module.internal\">\r\n            <not>\r\n                <isset property=\"named.module.internal\"/>\r\n            </not>\r\n        </condition>\r\n        <property name=\"javac.modulepath\" value=\"\"/>\r\n        <property name=\"run.modulepath\" value=\"${javac.modulepath}\"/>\r\n        <property name=\"module.build.classes.dir\" value=\"${build.classes.dir}\"/>\r\n        <property name=\"debug.modulepath\" value=\"${run.modulepath}\"/>\r\n        <property name=\"javac.upgrademodulepath\" value=\"\"/>\r\n        <property name=\"run.upgrademodulepath\" value=\"${javac.upgrademodulepath}\"/>\r\n        <condition else=\"\" property=\"javac.systemmodulepath.cmd.line.arg\" value=\"--system '${javac.systemmodulepath}'\">\r\n            <and>\r\n                <isset property=\"javac.systemmodulepath\"/>\r\n                <length length=\"0\" string=\"${javac.systemmodulepath}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n        <property name=\"dist.jlink.dir\" value=\"${dist.dir}/jlink\"/>\r\n        <property name=\"dist.jlink.output\" value=\"${dist.jlink.dir}/${application.title}\"/>\r\n        <property name=\"module.name\" value=\"\"/>\r\n    </target>\r\n    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property,-init-modules-supported\" name=\"-do-init\">\r\n        <property name=\"platform.java\" value=\"${java.home}/bin/java\"/>\r\n        <available file=\"${manifest.file}\" property=\"manifest.available\"/>\r\n        <condition property=\"splashscreen.available\">\r\n            <and>\r\n                <not>\r\n                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"/>\r\n                </not>\r\n                <available file=\"${application.splash}\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"main.class.available\">\r\n            <and>\r\n                <isset property=\"main.class\"/>\r\n                <not>\r\n                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"/>\r\n                </not>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"profile.available\">\r\n            <and>\r\n                <isset property=\"javac.profile\"/>\r\n                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"/>\r\n                <not>\r\n                    <matches pattern=\"1\\.[0-7](\\..*)?\" string=\"${javac.source}\"/>\r\n                </not>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"do.archive\">\r\n            <or>\r\n                <not>\r\n                    <istrue value=\"${jar.archive.disabled}\"/>\r\n                </not>\r\n                <istrue value=\"${not.archive.disabled}\"/>\r\n            </or>\r\n        </condition>\r\n        <condition property=\"do.archive+manifest.available\">\r\n            <and>\r\n                <isset property=\"manifest.available\"/>\r\n                <istrue value=\"${do.archive}\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"do.archive+main.class.available\">\r\n            <and>\r\n                <isset property=\"main.class.available\"/>\r\n                <istrue value=\"${do.archive}\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"do.archive+splashscreen.available\">\r\n            <and>\r\n                <isset property=\"splashscreen.available\"/>\r\n                <istrue value=\"${do.archive}\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"do.archive+profile.available\">\r\n            <and>\r\n                <isset property=\"profile.available\"/>\r\n                <istrue value=\"${do.archive}\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"have.tests\">\r\n            <or>\r\n                <available file=\"${test.src.dir}\"/>\r\n            </or>\r\n        </condition>\r\n        <condition property=\"have.sources\">\r\n            <or>\r\n                <available file=\"${src.dir}\"/>\r\n            </or>\r\n        </condition>\r\n        <condition property=\"netbeans.home+have.tests\">\r\n            <and>\r\n                <isset property=\"netbeans.home\"/>\r\n                <isset property=\"have.tests\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"no.javadoc.preview\">\r\n            <and>\r\n                <isset property=\"javadoc.preview\"/>\r\n                <isfalse value=\"${javadoc.preview}\"/>\r\n            </and>\r\n        </condition>\r\n        <property name=\"run.jvmargs\" value=\"\"/>\r\n        <property name=\"run.jvmargs.ide\" value=\"\"/>\r\n        <property name=\"javac.compilerargs\" value=\"\"/>\r\n        <property name=\"work.dir\" value=\"${basedir}\"/>\r\n        <condition property=\"no.deps\">\r\n            <and>\r\n                <istrue value=\"${no.dependencies}\"/>\r\n            </and>\r\n        </condition>\r\n        <property name=\"javac.debug\" value=\"true\"/>\r\n        <property name=\"javadoc.preview\" value=\"true\"/>\r\n        <property name=\"application.args\" value=\"\"/>\r\n        <property name=\"source.encoding\" value=\"${file.encoding}\"/>\r\n        <property name=\"runtime.encoding\" value=\"${source.encoding}\"/>\r\n        <property name=\"manifest.encoding\" value=\"${source.encoding}\"/>\r\n        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\r\n            <and>\r\n                <isset property=\"javadoc.encoding\"/>\r\n                <not>\r\n                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"/>\r\n                </not>\r\n            </and>\r\n        </condition>\r\n        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"/>\r\n        <property name=\"includes\" value=\"**\"/>\r\n        <property name=\"excludes\" value=\"\"/>\r\n        <property name=\"do.depend\" value=\"false\"/>\r\n        <condition property=\"do.depend.true\">\r\n            <istrue value=\"${do.depend}\"/>\r\n        </condition>\r\n        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"/>\r\n        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath/p:'${toString:endorsed.classpath.path}'\">\r\n            <and>\r\n                <isset property=\"endorsed.classpath\"/>\r\n                <not>\r\n                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"/>\r\n                </not>\r\n            </and>\r\n        </condition>\r\n        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">\r\n            <isset property=\"profile.available\"/>\r\n        </condition>\r\n        <condition else=\"false\" property=\"jdkBug6558476\">\r\n            <and>\r\n                <matches pattern=\"1\\.[56]\" string=\"${java.specification.version}\"/>\r\n                <not>\r\n                    <os family=\"unix\"/>\r\n                </not>\r\n            </and>\r\n        </condition>\r\n        <condition else=\"false\" property=\"javac.fork\">\r\n            <or>\r\n                <istrue value=\"${jdkBug6558476}\"/>\r\n                <istrue value=\"${javac.external.vm}\"/>\r\n            </or>\r\n        </condition>\r\n        <property name=\"jar.index\" value=\"false\"/>\r\n        <property name=\"jar.index.metainf\" value=\"${jar.index}\"/>\r\n        <property name=\"copylibs.rebase\" value=\"true\"/>\r\n        <available file=\"${meta.inf.dir}/persistence.xml\" property=\"has.persistence.xml\"/>\r\n        <condition property=\"junit.available\">\r\n            <or>\r\n                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"/>\r\n                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"/>\r\n            </or>\r\n        </condition>\r\n        <condition property=\"testng.available\">\r\n            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"/>\r\n        </condition>\r\n        <condition property=\"junit+testng.available\">\r\n            <and>\r\n                <istrue value=\"${junit.available}\"/>\r\n                <istrue value=\"${testng.available}\"/>\r\n            </and>\r\n        </condition>\r\n        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">\r\n            <istrue value=\"${junit+testng.available}\"/>\r\n        </condition>\r\n        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">\r\n            <istrue value=\"${junit+testng.available}\"/>\r\n        </condition>\r\n        <property name=\"java.failonerror\" value=\"true\"/>\r\n    </target>\r\n    <target name=\"-post-init\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\r\n        <fail unless=\"src.dir\">Must set src.dir</fail>\r\n        <fail unless=\"test.src.dir\">Must set test.src.dir</fail>\r\n        <fail unless=\"build.dir\">Must set build.dir</fail>\r\n        <fail unless=\"dist.dir\">Must set dist.dir</fail>\r\n        <fail unless=\"build.classes.dir\">Must set build.classes.dir</fail>\r\n        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir</fail>\r\n        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir</fail>\r\n        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir</fail>\r\n        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes</fail>\r\n        <fail unless=\"dist.jar\">Must set dist.jar</fail>\r\n    </target>\r\n    <target name=\"-init-macrodef-property\">\r\n        <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\r\n            <attribute name=\"name\"/>\r\n            <attribute name=\"value\"/>\r\n            <sequential>\r\n                <property name=\"@{name}\" value=\"${@{value}}\"/>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-ap-cmdline-properties,-init-source-module-properties\" if=\"modules.supported.internal\" name=\"-init-macrodef-javac-with-module\">\r\n        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\r\n            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\r\n            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\r\n            <attribute default=\"${javac.modulepath}\" name=\"modulepath\"/>\r\n            <attribute default=\"${javac.upgrademodulepath}\" name=\"upgrademodulepath\"/>\r\n            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>\r\n            <attribute default=\"${javac.processormodulepath}\" name=\"processormodulepath\"/>\r\n            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"${javac.debug}\" name=\"debug\"/>\r\n            <attribute default=\"${empty.dir}\" name=\"sourcepath\" unless:set=\"named.module.internal\"/>\r\n            <attribute default=\"${src.dir}\" if:set=\"named.module.internal\" name=\"sourcepath\"/>\r\n            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <condition property=\"warn.excludes.internal\">\r\n                    <and>\r\n                        <isset property=\"named.module.internal\"/>\r\n                        <length length=\"0\" string=\"@{excludes}\" trim=\"true\" when=\"greater\"/>\r\n                    </and>\r\n                </condition>\r\n                <echo if:set=\"warn.excludes.internal\" level=\"warning\" message=\"The javac excludes are not supported in the JDK 9 Named Module.\"/>\r\n                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>\r\n                <mkdir dir=\"${empty.dir}\"/>\r\n                <mkdir dir=\"@{apgeneratedsrcdir}\"/>\r\n                <condition property=\"processormodulepath.set\">\r\n                    <resourcecount count=\"0\" when=\"greater\">\r\n                        <path>\r\n                            <pathelement path=\"@{processormodulepath}\"/>\r\n                        </path>\r\n                    </resourcecount>\r\n                </condition>\r\n                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\r\n                    <src>\r\n                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\r\n                            <include name=\"*\"/>\r\n                        </dirset>\r\n                    </src>\r\n                    <classpath>\r\n                        <path path=\"@{classpath}\"/>\r\n                    </classpath>\r\n                    <modulepath>\r\n                        <path path=\"@{modulepath}\"/>\r\n                    </modulepath>\r\n                    <upgrademodulepath>\r\n                        <path path=\"@{upgrademodulepath}\"/>\r\n                    </upgrademodulepath>\r\n                    <compilerarg line=\"${javac.systemmodulepath.cmd.line.arg}\"/>\r\n                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>\r\n                    <compilerarg line=\"${javac.compilerargs}\"/>\r\n                    <compilerarg if:set=\"processormodulepath.set\" value=\"--processor-module-path\"/>\r\n                    <compilerarg if:set=\"processormodulepath.set\" path=\"@{processormodulepath}\"/>\r\n                    <compilerarg unless:set=\"processormodulepath.set\" value=\"-processorpath\"/>\r\n                    <compilerarg path=\"@{processorpath}:${empty.dir}\" unless:set=\"processormodulepath.set\"/>\r\n                    <compilerarg line=\"${ap.processors.internal}\"/>\r\n                    <compilerarg line=\"${annotation.processing.processor.options}\"/>\r\n                    <compilerarg value=\"-s\"/>\r\n                    <compilerarg path=\"@{apgeneratedsrcdir}\"/>\r\n                    <compilerarg line=\"${ap.proc.none.internal}\"/>\r\n                    <customize/>\r\n                </javac>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-ap-cmdline-properties,-init-source-module-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\" unless=\"modules.supported.internal\">\r\n        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\r\n            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\r\n            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\r\n            <attribute default=\"${javac.modulepath}\" name=\"modulepath\"/>\r\n            <attribute default=\"${javac.upgrademodulepath}\" name=\"upgrademodulepath\"/>\r\n            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>\r\n            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"${javac.debug}\" name=\"debug\"/>\r\n            <attribute default=\"${empty.dir}\" name=\"sourcepath\"/>\r\n            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>\r\n                <mkdir dir=\"${empty.dir}\"/>\r\n                <mkdir dir=\"@{apgeneratedsrcdir}\"/>\r\n                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\r\n                    <src>\r\n                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\r\n                            <include name=\"*\"/>\r\n                        </dirset>\r\n                    </src>\r\n                    <classpath>\r\n                        <path path=\"@{classpath}\"/>\r\n                    </classpath>\r\n                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\r\n                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>\r\n                    <compilerarg line=\"${javac.compilerargs}\"/>\r\n                    <compilerarg value=\"-processorpath\"/>\r\n                    <compilerarg path=\"@{processorpath}:${empty.dir}\"/>\r\n                    <compilerarg line=\"${ap.processors.internal}\"/>\r\n                    <compilerarg line=\"${annotation.processing.processor.options}\"/>\r\n                    <compilerarg value=\"-s\"/>\r\n                    <compilerarg path=\"@{apgeneratedsrcdir}\"/>\r\n                    <compilerarg line=\"${ap.proc.none.internal}\"/>\r\n                    <customize/>\r\n                </javac>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-ap-cmdline-properties,-init-source-module-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\r\n        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\r\n            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\r\n            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\r\n            <attribute default=\"${javac.modulepath}\" name=\"modulepath\"/>\r\n            <attribute default=\"${javac.upgrademodulepath}\" name=\"upgrademodulepath\"/>\r\n            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>\r\n            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"${javac.debug}\" name=\"debug\"/>\r\n            <attribute default=\"${empty.dir}\" name=\"sourcepath\"/>\r\n            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>\r\n                <mkdir dir=\"${empty.dir}\"/>\r\n                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\r\n                    <src>\r\n                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\r\n                            <include name=\"*\"/>\r\n                        </dirset>\r\n                    </src>\r\n                    <classpath>\r\n                        <path path=\"@{classpath}\"/>\r\n                    </classpath>\r\n                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\r\n                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>\r\n                    <compilerarg line=\"${javac.compilerargs}\"/>\r\n                    <customize/>\r\n                </javac>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-javac-with-module,-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\r\n        <macrodef name=\"depend\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\r\n            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\r\n            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\r\n            <sequential>\r\n                <depend cache=\"${build.dir}/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\r\n                    <classpath>\r\n                        <path path=\"@{classpath}\"/>\r\n                    </classpath>\r\n                </depend>\r\n            </sequential>\r\n        </macrodef>\r\n        <macrodef name=\"force-recompile\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\r\n            <sequential>\r\n                <fail unless=\"javac.includes\">Must set javac.includes</fail>\r\n                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\r\n                    <path>\r\n                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"/>\r\n                    </path>\r\n                    <globmapper from=\"*.java\" to=\"*.class\"/>\r\n                </pathconvert>\r\n                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"/>\r\n                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"/>\r\n                <delete>\r\n                    <files includesfile=\"${javac.includesfile.binary}\"/>\r\n                </delete>\r\n                <delete>\r\n                    <fileset file=\"${javac.includesfile.binary}\"/>\r\n                </delete>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">\r\n        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">\r\n            <and>\r\n                <istrue value=\"${junit.available}\"/>\r\n                <not>\r\n                    <isset property=\"test.method\"/>\r\n                </not>\r\n            </and>\r\n        </condition>\r\n        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">\r\n            <and>\r\n                <istrue value=\"${junit.available}\"/>\r\n                <isset property=\"test.method\"/>\r\n            </and>\r\n        </condition>\r\n    </target>\r\n    <target name=\"-init-test-properties\">\r\n        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"/>\r\n        <property name=\"test.binarytestincludes\" value=\"\"/>\r\n        <property name=\"test.binaryexcludes\" value=\"\"/>\r\n    </target>\r\n    <target depends=\"-init-modules-supported\" if=\"modules.supported.internal\" name=\"-init-macrodef-junit-prototype-with-module\">\r\n        <macrodef name=\"junit-prototype\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <element name=\"customizePrototype\" optional=\"true\"/>\r\n            <sequential>\r\n                <property name=\"junit.forkmode\" value=\"perTest\"/>\r\n                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">\r\n                    <syspropertyset>\r\n                        <propertyref prefix=\"test-sys-prop.\"/>\r\n                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\r\n                    </syspropertyset>\r\n                    <classpath>\r\n                        <path path=\"${run.test.classpath}\"/>\r\n                    </classpath>\r\n                    <modulepath>\r\n                        <path path=\"${run.test.modulepath}\"/>\r\n                    </modulepath>\r\n                    <formatter type=\"brief\" usefile=\"false\"/>\r\n                    <formatter type=\"xml\"/>\r\n                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\r\n                    <jvmarg value=\"-ea\"/>\r\n                    <jvmarg line=\"${run.test.jvmargs}\"/>\r\n                    <customizePrototype/>\r\n                </junit>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-modules-supported\" name=\"-init-macrodef-junit-prototype-without-module\" unless=\"modules.supported.internal\">\r\n        <macrodef name=\"junit-prototype\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <element name=\"customizePrototype\" optional=\"true\"/>\r\n            <sequential>\r\n                <property name=\"junit.forkmode\" value=\"perTest\"/>\r\n                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">\r\n                    <syspropertyset>\r\n                        <propertyref prefix=\"test-sys-prop.\"/>\r\n                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\r\n                    </syspropertyset>\r\n                    <classpath>\r\n                        <path path=\"${run.test.classpath}\"/>\r\n                    </classpath>\r\n                    <formatter type=\"brief\" usefile=\"false\"/>\r\n                    <formatter type=\"xml\"/>\r\n                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\r\n                    <jvmarg value=\"-ea\"/>\r\n                    <customizePrototype/>\r\n                </junit>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-test-properties,-init-macrodef-junit-prototype-with-module,-init-macrodef-junit-prototype-without-module\" if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">\r\n        <macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <j2seproject3:junit-prototype>\r\n                    <customizePrototype>\r\n                        <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"/>\r\n                        <customize/>\r\n                    </customizePrototype>\r\n                </j2seproject3:junit-prototype>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-test-properties,-init-macrodef-junit-prototype-with-module,-init-macrodef-junit-prototype-without-module\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">\r\n        <macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <j2seproject3:junit-prototype>\r\n                    <customizePrototype>\r\n                        <batchtest todir=\"${build.test.results.dir}\">\r\n                            <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},${excludes}\" includes=\"@{includes}\">\r\n                                <filename name=\"@{testincludes}\"/>\r\n                            </fileset>\r\n                            <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\r\n                                <filename name=\"${test.binarytestincludes}\"/>\r\n                            </fileset>\r\n                        </batchtest>\r\n                        <customize/>\r\n                    </customizePrototype>\r\n                </j2seproject3:junit-prototype>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"/>\r\n    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">\r\n        <macrodef name=\"testng\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">\r\n                    <isset property=\"test.method\"/>\r\n                </condition>\r\n                <union id=\"test.set\">\r\n                    <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},**/*.xml,${excludes}\" includes=\"@{includes}\">\r\n                        <filename name=\"@{testincludes}\"/>\r\n                    </fileset>\r\n                </union>\r\n                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"/>\r\n                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"TFGBola\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\r\n                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"/>\r\n                    <propertyset>\r\n                        <propertyref prefix=\"test-sys-prop.\"/>\r\n                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\r\n                    </propertyset>\r\n                    <classpath>\r\n                        <path path=\"${run.test.classpath}\"/>\r\n                    </classpath>\r\n                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\r\n                    <customize/>\r\n                </testng>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target name=\"-init-macrodef-test-impl\">\r\n        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <echo>No tests executed.</echo>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">\r\n        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n                    <customize/>\r\n                </j2seproject3:junit>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">\r\n        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n                    <customize/>\r\n                </j2seproject3:testng>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">\r\n        <macrodef name=\"test\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <sequential>\r\n                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n                    <customize>\r\n                        <jvmarg line=\"${run.jvmargs}\"/>\r\n                        <jvmarg line=\"${run.jvmargs.ide}\"/>\r\n                    </customize>\r\n                </j2seproject3:test-impl>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">\r\n        <macrodef name=\"test-debug-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <element name=\"customizeDebuggee\" optional=\"true\"/>\r\n            <sequential>\r\n                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n                    <customize>\r\n                        <jvmarg value=\"-agentlib:jdwp=transport=${debug-transport},address=${jpda.address}\"/>\r\n                        <customizeDebuggee/>\r\n                    </customize>\r\n                </j2seproject3:junit>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">\r\n        <macrodef name=\"testng-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${main.class}\" name=\"testClass\"/>\r\n            <attribute default=\"\" name=\"testMethod\"/>\r\n            <element name=\"customize2\" optional=\"true\"/>\r\n            <sequential>\r\n                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\r\n                    <isset property=\"test.method\"/>\r\n                </condition>\r\n                <condition else=\"-suitename TFGBola -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\r\n                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"/>\r\n                </condition>\r\n                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"/>\r\n                <mkdir dir=\"${build.test.results.dir}\"/>\r\n                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">\r\n                    <customizeDebuggee>\r\n                        <customize2/>\r\n                        <jvmarg value=\"-ea\"/>\r\n                        <arg line=\"${testng.debug.mode}\"/>\r\n                        <arg line=\"-d ${build.test.results.dir}\"/>\r\n                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"/>\r\n                        <arg line=\"${testng.cmd.args}\"/>\r\n                    </customizeDebuggee>\r\n                </j2seproject3:debug>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">\r\n        <macrodef name=\"testng-debug-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${main.class}\" name=\"testClass\"/>\r\n            <attribute default=\"\" name=\"testMethod\"/>\r\n            <element implicit=\"true\" name=\"customize2\" optional=\"true\"/>\r\n            <sequential>\r\n                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\r\n                    <customize2/>\r\n                </j2seproject3:testng-debug>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">\r\n        <macrodef name=\"test-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <attribute default=\"${main.class}\" name=\"testClass\"/>\r\n            <attribute default=\"\" name=\"testMethod\"/>\r\n            <sequential>\r\n                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n                    <customizeDebuggee>\r\n                        <jvmarg line=\"${run.jvmargs}\"/>\r\n                        <jvmarg line=\"${run.jvmargs.ide}\"/>\r\n                    </customizeDebuggee>\r\n                </j2seproject3:test-debug-impl>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">\r\n        <macrodef name=\"test-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${includes}\" name=\"includes\"/>\r\n            <attribute default=\"${excludes}\" name=\"excludes\"/>\r\n            <attribute default=\"**\" name=\"testincludes\"/>\r\n            <attribute default=\"\" name=\"testmethods\"/>\r\n            <attribute default=\"${main.class}\" name=\"testClass\"/>\r\n            <attribute default=\"\" name=\"testMethod\"/>\r\n            <sequential>\r\n                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\r\n                    <customize2>\r\n                        <syspropertyset>\r\n                            <propertyref prefix=\"test-sys-prop.\"/>\r\n                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\r\n                        </syspropertyset>\r\n                    </customize2>\r\n                </j2seproject3:testng-debug-impl>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"/>\r\n    <!--\r\n                pre NB7.2 profiling section; consider it deprecated\r\n            -->\r\n    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"/>\r\n    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">\r\n        <macrodef name=\"resolve\">\r\n            <attribute name=\"name\"/>\r\n            <attribute name=\"value\"/>\r\n            <sequential>\r\n                <property name=\"@{name}\" value=\"${env.@{value}}\"/>\r\n            </sequential>\r\n        </macrodef>\r\n        <macrodef name=\"profile\">\r\n            <attribute default=\"${main.class}\" name=\"classname\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <property environment=\"env\"/>\r\n                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"/>\r\n                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" failonerror=\"${java.failonerror}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\r\n                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\r\n                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"/>\r\n                    <jvmarg line=\"${profiler.info.jvmargs}\"/>\r\n                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"/>\r\n                    <arg line=\"${application.args}\"/>\r\n                    <classpath>\r\n                        <path path=\"${run.classpath}\"/>\r\n                    </classpath>\r\n                    <syspropertyset>\r\n                        <propertyref prefix=\"run-sys-prop.\"/>\r\n                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\r\n                    </syspropertyset>\r\n                    <customize/>\r\n                </java>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">\r\n        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm</fail>\r\n        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent</fail>\r\n    </target>\r\n    <!--\r\n                end of pre NB7.2 profiling section\r\n            -->\r\n    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\r\n        <macrodef name=\"nbjpdastart\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\r\n            <attribute default=\"${main.class}\" name=\"name\"/>\r\n            <attribute default=\"${debug.modulepath}\" name=\"modulepath\"/>\r\n            <attribute default=\"${debug.classpath}\" name=\"classpath\"/>\r\n            <attribute default=\"\" name=\"stopclassname\"/>\r\n            <sequential>\r\n                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\r\n                    <modulepath>\r\n                        <path path=\"@{modulepath}\"/>\r\n                    </modulepath>\r\n                    <classpath>\r\n                        <path path=\"@{classpath}\"/>\r\n                    </classpath>\r\n                </nbjpdastart>\r\n            </sequential>\r\n        </macrodef>\r\n        <macrodef name=\"nbjpdareload\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\r\n            <attribute default=\"${build.classes.dir}\" name=\"dir\"/>\r\n            <sequential>\r\n                <nbjpdareload>\r\n                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\r\n                        <include name=\"${fix.includes}*.class\"/>\r\n                    </fileset>\r\n                </nbjpdareload>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target name=\"-init-debug-args\">\r\n        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\r\n            <os family=\"windows\"/>\r\n        </condition>\r\n        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\r\n            <isset property=\"debug.transport\"/>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\r\n        <macrodef name=\"debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${module.name}\" name=\"modulename\"/>\r\n            <attribute default=\"${main.class}\" name=\"classname\"/>\r\n            <attribute default=\"${debug.modulepath}\" name=\"modulepath\"/>\r\n            <attribute default=\"${debug.classpath}\" name=\"classpath\"/>\r\n            <element name=\"customizeDebuggee\" optional=\"true\"/>\r\n            <sequential>\r\n                <j2seproject1:java classname=\"@{classname}\" classpath=\"@{classpath}\" modulename=\"@{modulename}\" modulepath=\"@{modulepath}\">\r\n                    <customize>\r\n                        <jvmarg value=\"-agentlib:jdwp=transport=${debug-transport},address=${jpda.address}\"/>\r\n                        <customizeDebuggee/>\r\n                    </customize>\r\n                </j2seproject1:java>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-source-module-properties\" if=\"named.module.internal\" name=\"-init-macrodef-java-with-module\">\r\n        <macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\r\n            <attribute default=\"${module.name}\" name=\"modulename\"/>\r\n            <attribute default=\"${main.class}\" name=\"classname\"/>\r\n            <attribute default=\"${run.modulepath}\" name=\"modulepath\"/>\r\n            <attribute default=\"${run.upgrademodulepath}\" name=\"upgrademodulepath\"/>\r\n            <attribute default=\"${run.classpath}\" name=\"classpath\"/>\r\n            <attribute default=\"jvm\" name=\"jvm\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <java classname=\"@{classname}\" dir=\"${work.dir}\" failonerror=\"${java.failonerror}\" fork=\"true\" module=\"@{modulename}\">\r\n                    <classpath>\r\n                        <path path=\"@{classpath}\"/>\r\n                    </classpath>\r\n                    <modulepath>\r\n                        <pathelement path=\"@{modulepath}\"/>\r\n                        <pathelement location=\"${module.build.classes.dir}\"/>\r\n                    </modulepath>\r\n                    <upgrademodulepath>\r\n                        <path path=\"@{upgrademodulepath}\"/>\r\n                    </upgrademodulepath>\r\n                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>\r\n                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>\r\n                    <jvmarg line=\"${run.jvmargs}\"/>\r\n                    <jvmarg line=\"${run.jvmargs.ide}\"/>\r\n                    <syspropertyset>\r\n                        <propertyref prefix=\"run-sys-prop.\"/>\r\n                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\r\n                    </syspropertyset>\r\n                    <customize/>\r\n                </java>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-source-module-properties\" if=\"unnamed.module.internal\" name=\"-init-macrodef-java-with-unnamed-module\">\r\n        <macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\r\n            <attribute default=\"\" name=\"modulename\"/>\r\n            <attribute default=\"${main.class}\" name=\"classname\"/>\r\n            <attribute default=\"${run.modulepath}\" name=\"modulepath\"/>\r\n            <attribute default=\"${run.upgrademodulepath}\" name=\"upgrademodulepath\"/>\r\n            <attribute default=\"${run.classpath}\" name=\"classpath\"/>\r\n            <attribute default=\"jvm\" name=\"jvm\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <java classname=\"@{classname}\" dir=\"${work.dir}\" failonerror=\"${java.failonerror}\" fork=\"true\">\r\n                    <classpath>\r\n                        <path path=\"@{classpath}\"/>\r\n                    </classpath>\r\n                    <modulepath>\r\n                        <path path=\"@{modulepath}\"/>\r\n                    </modulepath>\r\n                    <upgrademodulepath>\r\n                        <path path=\"@{upgrademodulepath}\"/>\r\n                    </upgrademodulepath>\r\n                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>\r\n                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>\r\n                    <jvmarg line=\"${run.jvmargs}\"/>\r\n                    <jvmarg line=\"${run.jvmargs.ide}\"/>\r\n                    <syspropertyset>\r\n                        <propertyref prefix=\"run-sys-prop.\"/>\r\n                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\r\n                    </syspropertyset>\r\n                    <customize/>\r\n                </java>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-source-module-properties\" name=\"-init-macrodef-java-without-module\" unless=\"modules.supported.internal\">\r\n        <macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\r\n            <attribute default=\"\" name=\"modulename\"/>\r\n            <attribute default=\"${main.class}\" name=\"classname\"/>\r\n            <attribute default=\"\" name=\"modulepath\"/>\r\n            <attribute default=\"${run.classpath}\" name=\"classpath\"/>\r\n            <attribute default=\"jvm\" name=\"jvm\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <java classname=\"@{classname}\" dir=\"${work.dir}\" failonerror=\"${java.failonerror}\" fork=\"true\">\r\n                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\r\n                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>\r\n                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>\r\n                    <jvmarg line=\"${run.jvmargs}\"/>\r\n                    <jvmarg line=\"${run.jvmargs.ide}\"/>\r\n                    <classpath>\r\n                        <path path=\"@{classpath}\"/>\r\n                    </classpath>\r\n                    <syspropertyset>\r\n                        <propertyref prefix=\"run-sys-prop.\"/>\r\n                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\r\n                    </syspropertyset>\r\n                    <customize/>\r\n                </java>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target depends=\"-init-macrodef-java-with-module, -init-macrodef-java-with-unnamed-module, -init-macrodef-java-without-module\" name=\"-init-macrodef-java\"/>\r\n    <target name=\"-init-macrodef-copylibs\">\r\n        <macrodef name=\"copylibs\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <attribute default=\"${manifest.file}\" name=\"manifest\"/>\r\n            <element name=\"customize\" optional=\"true\"/>\r\n            <sequential>\r\n                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"/>\r\n                <pathconvert property=\"run.classpath.without.build.classes.dir\">\r\n                    <path path=\"${run.classpath}\"/>\r\n                    <map from=\"${build.classes.dir.resolved}\" to=\"\"/>\r\n                </pathconvert>\r\n                <pathconvert pathsep=\" \" property=\"jar.classpath\">\r\n                    <path path=\"${run.classpath.without.build.classes.dir}\"/>\r\n                    <chainedmapper>\r\n                        <flattenmapper/>\r\n                        <filtermapper>\r\n                            <replacestring from=\" \" to=\"%20\"/>\r\n                        </filtermapper>\r\n                        <globmapper from=\"*\" to=\"lib/*\"/>\r\n                    </chainedmapper>\r\n                </pathconvert>\r\n                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"/>\r\n                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" manifestencoding=\"UTF-8\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\r\n                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"/>\r\n                    <manifest>\r\n                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"/>\r\n                        <customize/>\r\n                    </manifest>\r\n                </copylibs>\r\n            </sequential>\r\n        </macrodef>\r\n    </target>\r\n    <target name=\"-init-presetdef-jar\">\r\n        <presetdef name=\"jar\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\r\n            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\" manifestencoding=\"UTF-8\">\r\n                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"/>\r\n            </jar>\r\n        </presetdef>\r\n    </target>\r\n    <target name=\"-init-ap-cmdline-properties\">\r\n        <property name=\"annotation.processing.enabled\" value=\"true\"/>\r\n        <property name=\"annotation.processing.processors.list\" value=\"\"/>\r\n        <property name=\"annotation.processing.processor.options\" value=\"\"/>\r\n        <property name=\"annotation.processing.run.all.processors\" value=\"true\"/>\r\n        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"/>\r\n        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"/>\r\n        <condition property=\"ap.supported.internal\" value=\"true\">\r\n            <not>\r\n                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"/>\r\n            </not>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\r\n        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\r\n            <isfalse value=\"${annotation.processing.run.all.processors}\"/>\r\n        </condition>\r\n        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\r\n            <isfalse value=\"${annotation.processing.enabled}\"/>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\r\n        <property name=\"ap.cmd.line.internal\" value=\"\"/>\r\n    </target>\r\n    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"/>\r\n    <!--\r\n                ===================\r\n                COMPILATION SECTION\r\n                ===================\r\n            -->\r\n    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\r\n        <property location=\"${build.dir}/built-jar.properties\" name=\"built-jar.properties\"/>\r\n        <delete file=\"${built-jar.properties}\" quiet=\"true\"/>\r\n    </target>\r\n    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\r\n        <echo level=\"warn\" message=\"Cycle detected: TFGBola was already built\"/>\r\n    </target>\r\n    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\r\n        <mkdir dir=\"${build.dir}\"/>\r\n        <touch file=\"${built-jar.properties}\" verbose=\"false\"/>\r\n        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"/>\r\n        <antcall target=\"-warn-already-built-jar\"/>\r\n        <propertyfile file=\"${built-jar.properties}\">\r\n            <entry key=\"${basedir}\" value=\"\"/>\r\n        </propertyfile>\r\n    </target>\r\n    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"/>\r\n    <target depends=\"init\" name=\"-check-automatic-build\">\r\n        <available file=\"${build.classes.dir}/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"/>\r\n    </target>\r\n    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\r\n        <antcall target=\"clean\">\r\n            <param name=\"no.dependencies\" value=\"true\"/>\r\n        </antcall>\r\n    </target>\r\n    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\r\n        <mkdir dir=\"${build.classes.dir}\"/>\r\n    </target>\r\n    <target name=\"-pre-compile\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target if=\"do.depend.true\" name=\"-compile-depend\">\r\n        <pathconvert property=\"build.generated.subdirs\">\r\n            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\r\n                <include name=\"*\"/>\r\n            </dirset>\r\n        </pathconvert>\r\n        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"/>\r\n    </target>\r\n    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\r\n        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"/>\r\n        <copy todir=\"${build.classes.dir}\">\r\n            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\r\n        </copy>\r\n    </target>\r\n    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\r\n        <mkdir dir=\"${build.classes.dir}/META-INF\"/>\r\n        <copy todir=\"${build.classes.dir}/META-INF\">\r\n            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"/>\r\n        </copy>\r\n    </target>\r\n    <target name=\"-post-compile\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"/>\r\n    <target name=\"-pre-compile-single\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\r\n        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>\r\n        <j2seproject3:force-recompile/>\r\n        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}, module-info.java\" sourcepath=\"${src.dir}\"/>\r\n    </target>\r\n    <target name=\"-post-compile-single\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"/>\r\n    <!--\r\n                ====================\r\n                JAR BUILDING SECTION\r\n                ====================\r\n            -->\r\n    <target depends=\"init\" name=\"-pre-pre-jar\">\r\n        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"/>\r\n        <mkdir dir=\"${dist.jar.dir}\"/>\r\n    </target>\r\n    <target name=\"-pre-jar\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,compile\" name=\"-check-module-main-class\">\r\n        <pathconvert property=\"main.class.file\">\r\n            <string value=\"${main.class}\"/>\r\n            <unpackagemapper from=\"*\" to=\"*.class\"/>\r\n        </pathconvert>\r\n        <condition property=\"do.module.main.class\">\r\n            <and>\r\n                <isset property=\"main.class.available\"/>\r\n                <available file=\"${build.classes.dir}/module-info.class\"/>\r\n                <available file=\"${build.classes.dir}/${main.class.file}\"/>\r\n                <isset property=\"libs.CopyLibs.classpath\"/>\r\n                <available classname=\"org.netbeans.modules.java.j2seproject.moduletask.ModuleMainClass\" classpath=\"${libs.CopyLibs.classpath}\"/>\r\n            </and>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-check-module-main-class\" if=\"do.module.main.class\" name=\"-set-module-main-class\">\r\n        <taskdef classname=\"org.netbeans.modules.java.j2seproject.moduletask.ModuleMainClass\" classpath=\"${libs.CopyLibs.classpath}\" name=\"modulemainclass\"/>\r\n        <modulemainclass failonerror=\"false\" mainclass=\"${main.class}\" moduleinfo=\"${build.classes.dir}/module-info.class\"/>\r\n    </target>\r\n    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">\r\n        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"/>\r\n        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"/>\r\n    </target>\r\n    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">\r\n        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"/>\r\n        <copy encoding=\"${manifest.encoding}\" file=\"${manifest.file}\" outputencoding=\"UTF-8\" tofile=\"${tmp.manifest.file}\"/>\r\n    </target>\r\n    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">\r\n        <manifest encoding=\"UTF-8\" file=\"${tmp.manifest.file}\" mode=\"update\">\r\n            <attribute name=\"Main-Class\" value=\"${main.class}\"/>\r\n        </manifest>\r\n    </target>\r\n    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">\r\n        <manifest encoding=\"UTF-8\" file=\"${tmp.manifest.file}\" mode=\"update\">\r\n            <attribute name=\"Profile\" value=\"${javac.profile}\"/>\r\n        </manifest>\r\n    </target>\r\n    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">\r\n        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"/>\r\n        <mkdir dir=\"${build.classes.dir}/META-INF\"/>\r\n        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}/META-INF\"/>\r\n        <manifest encoding=\"UTF-8\" file=\"${tmp.manifest.file}\" mode=\"update\">\r\n            <attribute name=\"SplashScreen-Image\" value=\"META-INF/${splashscreen.basename}\"/>\r\n        </manifest>\r\n    </target>\r\n    <target depends=\"init,compile\" name=\"-check-do-mkdist\">\r\n        <condition property=\"do.mkdist\">\r\n            <and>\r\n                <isset property=\"do.archive\"/>\r\n                <isset property=\"libs.CopyLibs.classpath\"/>\r\n                <not>\r\n                    <istrue value=\"${mkdist.disabled}\"/>\r\n                </not>\r\n                <not>\r\n                    <available file=\"${build.classes.dir}/module-info.class\"/>\r\n                </not>\r\n            </and>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-check-do-mkdist\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">\r\n        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"/>\r\n        <echo level=\"info\">To run this application from the command line without Ant, try:</echo>\r\n        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"/>\r\n        <echo level=\"info\">java -jar \"${dist.jar.resolved}\"</echo>\r\n    </target>\r\n    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-check-do-mkdist\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">\r\n        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"/>\r\n        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"/>\r\n        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"/>\r\n        <condition else=\"${dist.jar.resolved}\" property=\"jar.usage.message.class.path.replacement\" value=\"\">\r\n            <isset property=\"named.module.internal\"/>\r\n        </condition>\r\n        <pathconvert property=\"run.classpath.with.dist.jar\">\r\n            <path path=\"${run.classpath}\"/>\r\n            <map from=\"${build.classes.dir.resolved}\" to=\"${jar.usage.message.class.path.replacement}\"/>\r\n        </pathconvert>\r\n        <pathconvert property=\"run.modulepath.with.dist.jar\">\r\n            <path location=\"${dist.jar.resolved}\"/>\r\n            <path path=\"${run.modulepath}\"/>\r\n            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"/>\r\n        </pathconvert>\r\n        <condition else=\"${run.modulepath}\" property=\"jar.usage.message.run.modulepath.with.dist.jar\" value=\"${run.modulepath.with.dist.jar}\">\r\n            <isset property=\"named.module.internal\"/>\r\n        </condition>\r\n        <condition else=\"\" property=\"jar.usage.message.module.path\" value=\" -p ${jar.usage.message.run.modulepath.with.dist.jar}\">\r\n            <and>\r\n                <isset property=\"modules.supported.internal\"/>\r\n                <length length=\"0\" string=\"${jar.usage.message.run.modulepath.with.dist.jar}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n        <condition else=\"\" property=\"jar.usage.message.class.path\" value=\" -cp ${run.classpath.with.dist.jar}\">\r\n            <length length=\"0\" string=\"${run.classpath.with.dist.jar}\" when=\"greater\"/>\r\n        </condition>\r\n        <condition else=\"/${main.class}\" property=\"jar.usage.message.main.class.class.selector\" value=\"\">\r\n            <isset property=\"do.module.main.class\"/>\r\n        </condition>\r\n        <condition else=\" ${main.class}\" property=\"jar.usage.message.main.class\" value=\" -m ${module.name}${jar.usage.message.main.class.class.selector}\">\r\n            <isset property=\"named.module.internal\"/>\r\n        </condition>\r\n        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java}${jar.usage.message.module.path}${jar.usage.message.class.path}${jar.usage.message.main.class}\">\r\n            <isset property=\"main.class.available\"/>\r\n        </condition>\r\n        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">\r\n            <isset property=\"main.class.available\"/>\r\n        </condition>\r\n        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"/>\r\n    </target>\r\n    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">\r\n        <delete>\r\n            <fileset file=\"${tmp.manifest.file}\"/>\r\n        </delete>\r\n    </target>\r\n    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"/>\r\n    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"/>\r\n    <target name=\"-post-jar\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,compile,-pre-jar,-set-module-main-class,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"/>\r\n    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar,deploy\" description=\"Build JAR.\" name=\"jar\"/>\r\n    <!--\r\n                =================\r\n                DEPLOY SECTION\r\n                =================\r\n            -->\r\n    <target name=\"-pre-deploy\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init\" name=\"-check-jlink\">\r\n        <condition property=\"do.jlink.internal\">\r\n            <and>\r\n                <istrue value=\"${do.jlink}\"/>\r\n                <isset property=\"do.archive\"/>\r\n                <isset property=\"named.module.internal\"/>\r\n            </and>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"init,-do-jar,-post-jar,-pre-deploy,-check-jlink\" if=\"do.jlink.internal\" name=\"-do-deploy\">\r\n        <delete dir=\"${dist.jlink.dir}\" failonerror=\"false\" quiet=\"true\"/>\r\n        <property name=\"jlink.launcher.name\" value=\"${application.title}\"/>\r\n        <condition else=\"${module.name}\" property=\"jlink.add.modules\" value=\"${module.name},${jlink.additionalmodules}\">\r\n            <and>\r\n                <isset property=\"jlink.additionalmodules\"/>\r\n                <length length=\"0\" string=\"${jlink.additionalmodules}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"jlink.do.strip.internal\">\r\n            <and>\r\n                <isset property=\"jlink.strip\"/>\r\n                <istrue value=\"${jlink.strip}\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"jlink.do.additionalparam.internal\">\r\n            <and>\r\n                <isset property=\"jlink.additionalparam\"/>\r\n                <length length=\"0\" string=\"${jlink.additionalparam}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n        <condition property=\"jlink.do.launcher.internal\">\r\n            <and>\r\n                <istrue value=\"${jlink.launcher}\"/>\r\n                <isset property=\"main.class.available\"/>\r\n            </and>\r\n        </condition>\r\n        <property name=\"platform.jlink\" value=\"${jdk.home}/bin/jlink\"/>\r\n        <property name=\"jlink.systemmodules.internal\" value=\"${jdk.home}/jmods\"/>\r\n        <exec executable=\"${platform.jlink}\">\r\n            <arg value=\"--module-path\"/>\r\n            <arg path=\"${jlink.systemmodules.internal}:${run.modulepath}:${dist.jar}\"/>\r\n            <arg value=\"--add-modules\"/>\r\n            <arg value=\"${jlink.add.modules}\"/>\r\n            <arg if:set=\"jlink.do.strip.internal\" value=\"--strip-debug\"/>\r\n            <arg if:set=\"jlink.do.launcher.internal\" value=\"--launcher\"/>\r\n            <arg if:set=\"jlink.do.launcher.internal\" value=\"${jlink.launcher.name}=${module.name}/${main.class}\"/>\r\n            <arg if:set=\"jlink.do.additionalparam.internal\" line=\"${jlink.additionalparam}\"/>\r\n            <arg value=\"--output\"/>\r\n            <arg value=\"${dist.jlink.output}\"/>\r\n        </exec>\r\n    </target>\r\n    <target name=\"-post-deploy\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"-do-jar,-post-jar,-pre-deploy,-do-deploy,-post-deploy\" name=\"deploy\"/>\r\n    <!--\r\n                =================\r\n                EXECUTION SECTION\r\n                =================\r\n            -->\r\n    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\r\n        <j2seproject1:java>\r\n            <customize>\r\n                <arg line=\"${application.args}\"/>\r\n            </customize>\r\n        </j2seproject1:java>\r\n    </target>\r\n    <target name=\"-do-not-recompile\">\r\n        <property name=\"javac.includes.binary\" value=\"\"/>\r\n    </target>\r\n    <target depends=\"init,compile-single\" name=\"run-single\">\r\n        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\r\n        <j2seproject1:java classname=\"${run.class}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\r\n        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\r\n        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"/>\r\n    </target>\r\n    <!--\r\n                =================\r\n                DEBUGGING SECTION\r\n                =================\r\n            -->\r\n    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\r\n        <j2seproject1:nbjpdastart name=\"${debug.class}\"/>\r\n    </target>\r\n    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\r\n        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"/>\r\n    </target>\r\n    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\r\n        <j2seproject3:debug>\r\n            <customizeDebuggee>\r\n                <arg line=\"${application.args}\"/>\r\n            </customizeDebuggee>\r\n        </j2seproject3:debug>\r\n    </target>\r\n    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"/>\r\n    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\r\n        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"/>\r\n    </target>\r\n    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"/>\r\n    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\r\n        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>\r\n        <j2seproject3:debug classname=\"${debug.class}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"/>\r\n    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\r\n        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>\r\n        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"/>\r\n    <target depends=\"init\" name=\"-pre-debug-fix\">\r\n        <fail unless=\"fix.includes\">Must set fix.includes</fail>\r\n        <property name=\"javac.includes\" value=\"${fix.includes}.java\"/>\r\n    </target>\r\n    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\r\n        <j2seproject1:nbjpdareload/>\r\n    </target>\r\n    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"/>\r\n    <!--\r\n                =================\r\n                PROFILING SECTION\r\n                =================\r\n            -->\r\n    <!--\r\n                pre NB7.2 profiler integration\r\n            -->\r\n    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">\r\n        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\r\n        <nbprofiledirect>\r\n            <classpath>\r\n                <path path=\"${run.classpath}\"/>\r\n            </classpath>\r\n        </nbprofiledirect>\r\n        <profile/>\r\n    </target>\r\n    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">\r\n        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class</fail>\r\n        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\r\n        <nbprofiledirect>\r\n            <classpath>\r\n                <path path=\"${run.classpath}\"/>\r\n            </classpath>\r\n        </nbprofiledirect>\r\n        <profile classname=\"${profile.class}\"/>\r\n    </target>\r\n    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">\r\n        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\r\n        <nbprofiledirect>\r\n            <classpath>\r\n                <path path=\"${run.classpath}\"/>\r\n            </classpath>\r\n        </nbprofiledirect>\r\n        <profile classname=\"sun.applet.AppletViewer\">\r\n            <customize>\r\n                <arg value=\"${applet.url}\"/>\r\n            </customize>\r\n        </profile>\r\n    </target>\r\n    <target depends=\"-init-macrodef-junit,profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">\r\n        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\r\n        <nbprofiledirect>\r\n            <classpath>\r\n                <path path=\"${run.test.classpath}\"/>\r\n            </classpath>\r\n        </nbprofiledirect>\r\n        <j2seproject3:junit excludes=\"${excludes}\" includes=\"${includes}\" testincludes=\"${profile.class}\" testmethods=\"\">\r\n            <customize>\r\n                <jvmarg value=\"-agentlib:jdwp=transport=${debug-transport},address=${jpda.address}\"/>\r\n                <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"/>\r\n                <jvmarg value=\"${profiler.info.jvmargs.agent}\"/>\r\n                <jvmarg line=\"${profiler.info.jvmargs}\"/>\r\n                <classpath>\r\n                    <path path=\"${run.test.classpath}\"/>\r\n                </classpath>\r\n            </customize>\r\n        </j2seproject3:junit>\r\n    </target>\r\n    <!--\r\n                end of pre NB72 profiling section\r\n            -->\r\n    <target if=\"netbeans.home\" name=\"-profile-check\">\r\n        <condition property=\"profiler.configured\">\r\n            <or>\r\n                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"/>\r\n                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"/>\r\n            </or>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">\r\n        <startprofiler/>\r\n        <antcall target=\"run\"/>\r\n    </target>\r\n    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">\r\n        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\r\n        <startprofiler/>\r\n        <antcall target=\"run-single\"/>\r\n    </target>\r\n    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"/>\r\n    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">\r\n        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>\r\n        <startprofiler/>\r\n        <antcall target=\"test-single\"/>\r\n    </target>\r\n    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">\r\n        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\r\n        <startprofiler/>\r\n        <antcall target=\"run-test-with-main\"/>\r\n    </target>\r\n    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">\r\n        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\r\n        <startprofiler/>\r\n        <antcall target=\"run-applet\"/>\r\n    </target>\r\n    <!--\r\n                ===============\r\n                JAVADOC SECTION\r\n                ===============\r\n            -->\r\n    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\r\n        <mkdir dir=\"${dist.javadoc.dir}\"/>\r\n        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\r\n            <and>\r\n                <isset property=\"endorsed.classpath.cmd.line.arg\"/>\r\n                <not>\r\n                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"/>\r\n                </not>\r\n            </and>\r\n        </condition>\r\n        <condition else=\"\" property=\"bug5101868workaround\" value=\"*.java\">\r\n            <matches pattern=\"1\\.[56](\\..*)?\" string=\"${java.version}\"/>\r\n        </condition>\r\n        <condition else=\"\" property=\"javadoc.html5.cmd.line.arg\" value=\"-html5\">\r\n            <and>\r\n                <isset property=\"javadoc.html5\"/>\r\n                <available file=\"${jdk.home}${file.separator}lib${file.separator}jrt-fs.jar\"/>\r\n            </and>\r\n        </condition>\r\n        <javadoc additionalparam=\"-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\r\n            <classpath>\r\n                <path path=\"${javac.classpath}\"/>\r\n            </classpath>\r\n            <fileset dir=\"${src.dir}\" excludes=\"${bug5101868workaround},${excludes}\" includes=\"${includes}\">\r\n                <filename name=\"**/*.java\"/>\r\n            </fileset>\r\n            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\r\n                <include name=\"**/*.java\"/>\r\n                <exclude name=\"*.java\"/>\r\n            </fileset>\r\n            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"/>\r\n            <arg line=\"${javadoc.html5.cmd.line.arg}\"/>\r\n        </javadoc>\r\n        <copy todir=\"${dist.javadoc.dir}\">\r\n            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\r\n                <filename name=\"**/doc-files/**\"/>\r\n            </fileset>\r\n            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\r\n                <include name=\"**/doc-files/**\"/>\r\n            </fileset>\r\n        </copy>\r\n    </target>\r\n    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\r\n        <nbbrowse file=\"${dist.javadoc.dir}/index.html\"/>\r\n    </target>\r\n    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"/>\r\n    <!--\r\n                =========================\r\n                TEST COMPILATION SECTION\r\n                =========================\r\n            -->\r\n    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\r\n        <mkdir dir=\"${build.test.classes.dir}\"/>\r\n    </target>\r\n    <target name=\"-pre-compile-test\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"-init-source-module-properties\" if=\"named.module.internal\" name=\"-init-test-javac-module-properties-with-module\">\r\n        <j2seproject3:modulename property=\"test.module.name\" sourcepath=\"${test.src.dir}\"/>\r\n        <condition else=\"${empty.dir}\" property=\"javac.test.sourcepath\" value=\"${test.src.dir}\">\r\n            <and>\r\n                <isset property=\"test.module.name\"/>\r\n                <length length=\"0\" string=\"${test.module.name}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n        <condition else=\"--patch-module ${module.name}=${test.src.dir} --add-reads ${module.name}=ALL-UNNAMED\" property=\"javac.test.compilerargs\" value=\"--add-reads ${test.module.name}=ALL-UNNAMED\">\r\n            <and>\r\n                <isset property=\"test.module.name\"/>\r\n                <length length=\"0\" string=\"${test.module.name}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-init-source-module-properties\" if=\"named.module.internal\" name=\"-init-test-run-module-properties\">\r\n        <condition else=\"${module.name}\" property=\"run.test.addexport.source.module.internal\" value=\"${test.module.name}\">\r\n            <and>\r\n                <isset property=\"test.module.name\"/>\r\n                <length length=\"0\" string=\"${test.module.name}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n        <fileset dir=\"${build.test.classes.dir}\" id=\"run.test.packages.internal\" includes=\"**/*.class\"/>\r\n        <property location=\"${build.test.classes.dir}\" name=\"build.test.classes.dir.abs.internal\"/>\r\n        <pathconvert pathsep=\" \" property=\"run.test.addexports.internal\" refid=\"run.test.packages.internal\">\r\n            <chainedmapper>\r\n                <regexpmapper from=\"^(.*)\\Q${file.separator}\\E.*\\.class$$\" to=\"\\1\"/>\r\n                <filtermapper>\r\n                    <uniqfilter/>\r\n                    <replacestring from=\"${build.test.classes.dir.abs.internal}\" to=\"\"/>\r\n                </filtermapper>\r\n                <cutdirsmapper dirs=\"1\"/>\r\n                <packagemapper from=\"*\" to=\"--add-exports ${run.test.addexport.source.module.internal}/*=ALL-UNNAMED\"/>\r\n            </chainedmapper>\r\n        </pathconvert>\r\n        <condition else=\"--patch-module ${module.name}=${build.test.classes.dir} --add-modules ${module.name} --add-reads ${module.name}=ALL-UNNAMED ${run.test.addexports.internal}\" property=\"run.test.jvmargs\" value=\"--add-modules ${test.module.name} --add-reads ${test.module.name}=ALL-UNNAMED ${run.test.addexports.internal}\">\r\n            <and>\r\n                <isset property=\"test.module.name\"/>\r\n                <length length=\"0\" string=\"${test.module.name}\" when=\"greater\"/>\r\n            </and>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-init-source-module-properties\" name=\"-init-test-module-properties-without-module\" unless=\"named.module.internal\">\r\n        <property name=\"javac.test.sourcepath\" value=\"${empty.dir}\"/>\r\n        <property name=\"javac.test.compilerargs\" value=\"\"/>\r\n        <property name=\"run.test.jvmargs\" value=\"\"/>\r\n    </target>\r\n    <target depends=\"-init-test-javac-module-properties-with-module,-init-test-module-properties-without-module\" name=\"-init-test-module-properties\"/>\r\n    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\r\n        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"${test.src.dir}\"/>\r\n    </target>\r\n    <target depends=\"init,deps-jar,compile,-init-test-module-properties,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\r\n        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" modulepath=\"${javac.test.modulepath}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"${javac.test.sourcepath}\" srcdir=\"${test.src.dir}\">\r\n            <customize>\r\n                <compilerarg line=\"${javac.test.compilerargs}\"/>\r\n            </customize>\r\n        </j2seproject3:javac>\r\n        <copy todir=\"${build.test.classes.dir}\">\r\n            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\r\n        </copy>\r\n    </target>\r\n    <target name=\"-post-compile-test\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"/>\r\n    <target name=\"-pre-compile-test-single\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,deps-jar,compile,-init-test-module-properties,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\r\n        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>\r\n        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"/>\r\n        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}, module-info.java\" modulepath=\"${javac.test.modulepath}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"${test.src.dir}\" srcdir=\"${test.src.dir}\">\r\n            <customize>\r\n                <compilerarg line=\"${javac.test.compilerargs}\"/>\r\n            </customize>\r\n        </j2seproject3:javac>\r\n        <copy todir=\"${build.test.classes.dir}\">\r\n            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\r\n        </copy>\r\n    </target>\r\n    <target name=\"-post-compile-test-single\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"/>\r\n    <!--\r\n                =======================\r\n                TEST EXECUTION SECTION\r\n                =======================\r\n            -->\r\n    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\r\n        <mkdir dir=\"${build.test.results.dir}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test,-init-test-run-module-properties,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\r\n        <j2seproject3:test includes=\"${includes}\" testincludes=\"**/*Test.java\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\r\n        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\r\n    </target>\r\n    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"/>\r\n    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"/>\r\n    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"/>\r\n    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\r\n        <mkdir dir=\"${build.test.results.dir}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\r\n        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>\r\n        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\r\n        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\r\n    </target>\r\n    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"/>\r\n    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">\r\n        <fail unless=\"test.class\">Must select some files in the IDE or set test.class</fail>\r\n        <fail unless=\"test.method\">Must select some method in the IDE or set test.method</fail>\r\n        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">\r\n        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\r\n    </target>\r\n    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"/>\r\n    <!--\r\n                =======================\r\n                TEST DEBUGGING SECTION\r\n                =======================\r\n            -->\r\n    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\r\n        <fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>\r\n        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">\r\n        <fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>\r\n        <fail unless=\"test.method\">Must select some method in the IDE or set test.method</fail>\r\n        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\r\n        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"/>\r\n    </target>\r\n    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"/>\r\n    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"/>\r\n    <target depends=\"debug-test-method\" name=\"debug-single-method\"/>\r\n    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\r\n        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"/>\r\n    </target>\r\n    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"/>\r\n    <!--\r\n                =========================\r\n                APPLET EXECUTION SECTION\r\n                =========================\r\n            -->\r\n    <target depends=\"init,compile-single\" name=\"run-applet\">\r\n        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\r\n        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\r\n            <customize>\r\n                <arg value=\"${applet.url}\"/>\r\n            </customize>\r\n        </j2seproject1:java>\r\n    </target>\r\n    <!--\r\n                =========================\r\n                APPLET DEBUGGING  SECTION\r\n                =========================\r\n            -->\r\n    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\r\n        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\r\n        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\r\n            <customizeDebuggee>\r\n                <arg value=\"${applet.url}\"/>\r\n            </customizeDebuggee>\r\n        </j2seproject3:debug>\r\n    </target>\r\n    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"/>\r\n    <!--\r\n                ===============\r\n                CLEANUP SECTION\r\n                ===============\r\n            -->\r\n    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\r\n        <property location=\"${build.dir}/built-clean.properties\" name=\"built-clean.properties\"/>\r\n        <delete file=\"${built-clean.properties}\" quiet=\"true\"/>\r\n    </target>\r\n    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\r\n        <echo level=\"warn\" message=\"Cycle detected: TFGBola was already built\"/>\r\n    </target>\r\n    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\r\n        <mkdir dir=\"${build.dir}\"/>\r\n        <touch file=\"${built-clean.properties}\" verbose=\"false\"/>\r\n        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"/>\r\n        <antcall target=\"-warn-already-built-clean\"/>\r\n        <propertyfile file=\"${built-clean.properties}\">\r\n            <entry key=\"${basedir}\" value=\"\"/>\r\n        </propertyfile>\r\n    </target>\r\n    <target depends=\"init\" name=\"-do-clean\">\r\n        <delete dir=\"${build.dir}\"/>\r\n        <delete dir=\"${dist.jlink.output}\"/>\r\n        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"/>\r\n    </target>\r\n    <target name=\"-post-clean\">\r\n        <!-- Empty placeholder for easier customization. -->\r\n        <!-- You can override this target in the ../build.xml file. -->\r\n    </target>\r\n    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"/>\r\n    <target name=\"-check-call-dep\">\r\n        <property file=\"${call.built.properties}\" prefix=\"already.built.\"/>\r\n        <condition property=\"should.call.dep\">\r\n            <and>\r\n                <not>\r\n                    <isset property=\"already.built.${call.subproject}\"/>\r\n                </not>\r\n                <available file=\"${call.script}\"/>\r\n            </and>\r\n        </condition>\r\n    </target>\r\n    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\r\n        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\r\n            <propertyset>\r\n                <propertyref prefix=\"transfer.\"/>\r\n                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"/>\r\n            </propertyset>\r\n        </ant>\r\n    </target>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../nbproject/build-impl.xml b/../nbproject/build-impl.xml
--- a/../nbproject/build-impl.xml	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../nbproject/build-impl.xml	(date 1747312249560)
@@ -119,7 +119,43 @@
         <property name="module.name" value=""/>
     </target>
     <target depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property,-init-modules-supported" name="-do-init">
-        <property name="platform.java" value="${java.home}/bin/java"/>
+        <j2seproject1:property name="platform.home" value="platforms.${platform.active}.home"/>
+        <j2seproject1:property name="platform.bootcp" value="platforms.${platform.active}.bootclasspath"/>
+        <j2seproject1:property name="platform.compiler" value="platforms.${platform.active}.compile"/>
+        <j2seproject1:property name="platform.javac.tmp" value="platforms.${platform.active}.javac"/>
+        <condition property="platform.javac" value="${platform.home}/bin/javac">
+            <equals arg1="${platform.javac.tmp}" arg2="$${platforms.${platform.active}.javac}"/>
+        </condition>
+        <property name="platform.javac" value="${platform.javac.tmp}"/>
+        <j2seproject1:property name="platform.java.tmp" value="platforms.${platform.active}.java"/>
+        <condition property="platform.java" value="${platform.home}/bin/java">
+            <equals arg1="${platform.java.tmp}" arg2="$${platforms.${platform.active}.java}"/>
+        </condition>
+        <property name="platform.java" value="${platform.java.tmp}"/>
+        <j2seproject1:property name="platform.javadoc.tmp" value="platforms.${platform.active}.javadoc"/>
+        <condition property="platform.javadoc" value="${platform.home}/bin/javadoc">
+            <equals arg1="${platform.javadoc.tmp}" arg2="$${platforms.${platform.active}.javadoc}"/>
+        </condition>
+        <property name="platform.javadoc" value="${platform.javadoc.tmp}"/>
+        <condition property="platform.invalid" value="true">
+            <or>
+                <contains string="${platform.javac}" substring="$${platforms."/>
+                <contains string="${platform.java}" substring="$${platforms."/>
+                <contains string="${platform.javadoc}" substring="$${platforms."/>
+            </or>
+        </condition>
+        <fail unless="platform.home">Must set platform.home</fail>
+        <fail unless="platform.bootcp">Must set platform.bootcp</fail>
+        <fail unless="platform.java">Must set platform.java</fail>
+        <fail unless="platform.javac">Must set platform.javac</fail>
+        <fail if="platform.invalid">
+ The J2SE Platform is not correctly set up.
+ Your active platform is: ${platform.active}, but the corresponding property "platforms.${platform.active}.home" is not found in the project's properties files. 
+ Either open the project in the IDE and setup the Platform with the same name or add it manually.
+ For example like this:
+     ant -Duser.properties.file=&lt;path_to_property_file&gt; jar (where you put the property "platforms.${platform.active}.home" in a .properties file)
+  or ant -Dplatforms.${platform.active}.home=&lt;path_to_JDK_home&gt; jar (where no properties file is used) 
+  </fail>
         <available file="${manifest.file}" property="manifest.available"/>
         <condition property="splashscreen.available">
             <and>
@@ -242,20 +278,6 @@
         <condition else="" property="javac.profile.cmd.line.arg" value="-profile ${javac.profile}">
             <isset property="profile.available"/>
         </condition>
-        <condition else="false" property="jdkBug6558476">
-            <and>
-                <matches pattern="1\.[56]" string="${java.specification.version}"/>
-                <not>
-                    <os family="unix"/>
-                </not>
-            </and>
-        </condition>
-        <condition else="false" property="javac.fork">
-            <or>
-                <istrue value="${jdkBug6558476}"/>
-                <istrue value="${javac.external.vm}"/>
-            </or>
-        </condition>
         <property name="jar.index" value="false"/>
         <property name="jar.index.metainf" value="${jar.index}"/>
         <property name="copylibs.rebase" value="true"/>
@@ -343,7 +365,7 @@
                         </path>
                     </resourcecount>
                 </condition>
-                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" fork="${javac.fork}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">
+                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" executable="${platform.javac}" fork="yes" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">
                     <src>
                         <dirset dir="@{gensrcdir}" erroronmissingdir="false">
                             <include name="*"/>
@@ -394,7 +416,7 @@
                 <property location="${build.dir}/empty" name="empty.dir"/>
                 <mkdir dir="${empty.dir}"/>
                 <mkdir dir="@{apgeneratedsrcdir}"/>
-                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" fork="${javac.fork}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">
+                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" executable="${platform.javac}" fork="yes" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">
                     <src>
                         <dirset dir="@{gensrcdir}" erroronmissingdir="false">
                             <include name="*"/>
@@ -436,7 +458,7 @@
             <sequential>
                 <property location="${build.dir}/empty" name="empty.dir"/>
                 <mkdir dir="${empty.dir}"/>
-                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" fork="${javac.fork}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">
+                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" executable="${platform.javac}" fork="yes" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}" tempdir="${java.io.tmpdir}">
                     <src>
                         <dirset dir="@{gensrcdir}" erroronmissingdir="false">
                             <include name="*"/>
@@ -515,7 +537,7 @@
             <element name="customizePrototype" optional="true"/>
             <sequential>
                 <property name="junit.forkmode" value="perTest"/>
-                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">
+                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" jvm="${platform.java}" showoutput="true" tempdir="${build.dir}">
                     <syspropertyset>
                         <propertyref prefix="test-sys-prop."/>
                         <mapper from="test-sys-prop.*" to="*" type="glob"/>
@@ -543,7 +565,7 @@
             <element name="customizePrototype" optional="true"/>
             <sequential>
                 <property name="junit.forkmode" value="perTest"/>
-                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" showoutput="true" tempdir="${build.dir}">
+                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" forkmode="${junit.forkmode}" jvm="${platform.java}" showoutput="true" tempdir="${build.dir}">
                     <syspropertyset>
                         <propertyref prefix="test-sys-prop."/>
                         <mapper from="test-sys-prop.*" to="*" type="glob"/>
@@ -619,7 +641,7 @@
                     </fileset>
                 </union>
                 <taskdef classname="org.testng.TestNGAntTask" classpath="${run.test.classpath}" name="testng"/>
-                <testng classfilesetref="test.set" failureProperty="tests.failed" listeners="org.testng.reporters.VerboseReporter" methods="${testng.methods.arg}" mode="${testng.mode}" outputdir="${build.test.results.dir}" suitename="TFGBola" testname="TestNG tests" workingDir="${work.dir}">
+                <testng classfilesetref="test.set" failureProperty="tests.failed" jvm="${platform.java}" listeners="org.testng.reporters.VerboseReporter" methods="${testng.methods.arg}" mode="${testng.mode}" outputdir="${build.test.results.dir}" suitename="TFGBola" testname="TestNG tests" workingDir="${work.dir}">
                     <xmlfileset dir="${build.test.classes.dir}" includes="@{testincludes}"/>
                     <propertyset>
                         <propertyref prefix="test-sys-prop."/>
@@ -850,6 +872,9 @@
                     <classpath>
                         <path path="@{classpath}"/>
                     </classpath>
+                    <bootclasspath>
+                        <path path="${platform.bootcp}"/>
+                    </bootclasspath>
                 </nbjpdastart>
             </sequential>
         </macrodef>
@@ -899,7 +924,7 @@
             <attribute default="jvm" name="jvm"/>
             <element name="customize" optional="true"/>
             <sequential>
-                <java classname="@{classname}" dir="${work.dir}" failonerror="${java.failonerror}" fork="true" module="@{modulename}">
+                <java classname="@{classname}" dir="${work.dir}" failonerror="${java.failonerror}" fork="true" jvm="${platform.java}" module="@{modulename}">
                     <classpath>
                         <path path="@{classpath}"/>
                     </classpath>
@@ -933,7 +958,7 @@
             <attribute default="jvm" name="jvm"/>
             <element name="customize" optional="true"/>
             <sequential>
-                <java classname="@{classname}" dir="${work.dir}" failonerror="${java.failonerror}" fork="true">
+                <java classname="@{classname}" dir="${work.dir}" failonerror="${java.failonerror}" fork="true" jvm="${platform.java}">
                     <classpath>
                         <path path="@{classpath}"/>
                     </classpath>
@@ -965,7 +990,7 @@
             <attribute default="jvm" name="jvm"/>
             <element name="customize" optional="true"/>
             <sequential>
-                <java classname="@{classname}" dir="${work.dir}" failonerror="${java.failonerror}" fork="true">
+                <java classname="@{classname}" dir="${work.dir}" failonerror="${java.failonerror}" fork="true" jvm="${platform.java}">
                     <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
                     <jvmarg value="-Dfile.encoding=${runtime.encoding}"/>
                     <redirector errorencoding="${runtime.encoding}" inputencoding="${runtime.encoding}" outputencoding="${runtime.encoding}"/>
@@ -1199,7 +1224,7 @@
         <j2seproject3:copylibs manifest="${tmp.manifest.file}"/>
         <echo level="info">To run this application from the command line without Ant, try:</echo>
         <property location="${dist.jar}" name="dist.jar.resolved"/>
-        <echo level="info">java -jar "${dist.jar.resolved}"</echo>
+        <echo level="info">${platform.java} -jar "${dist.jar.resolved}"</echo>
     </target>
     <target depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-check-do-mkdist" if="do.archive" name="-do-jar-jar" unless="do.mkdist">
         <j2seproject1:jar manifest="${tmp.manifest.file}"/>
@@ -1301,8 +1326,8 @@
                 <isset property="main.class.available"/>
             </and>
         </condition>
-        <property name="platform.jlink" value="${jdk.home}/bin/jlink"/>
-        <property name="jlink.systemmodules.internal" value="${jdk.home}/jmods"/>
+        <property name="platform.jlink" value="${platform.home}/bin/jlink"/>
+        <property name="jlink.systemmodules.internal" value="${platform.home}/jmods"/>
         <exec executable="${platform.jlink}">
             <arg value="--module-path"/>
             <arg path="${jlink.systemmodules.internal}:${run.modulepath}:${dist.jar}"/>
@@ -1495,16 +1520,19 @@
                 </not>
             </and>
         </condition>
+        <exec executable="${platform.java}" failonerror="false" outputproperty="platform.version.output">
+            <arg value="-version"/>
+        </exec>
         <condition else="" property="bug5101868workaround" value="*.java">
-            <matches pattern="1\.[56](\..*)?" string="${java.version}"/>
+            <matches multiline="true" pattern="1\.[56](\..*)?" string="${platform.version.output}"/>
         </condition>
         <condition else="" property="javadoc.html5.cmd.line.arg" value="-html5">
             <and>
                 <isset property="javadoc.html5"/>
-                <available file="${jdk.home}${file.separator}lib${file.separator}jrt-fs.jar"/>
+                <available file="${platform.home}${file.separator}lib${file.separator}jrt-fs.jar"/>
             </and>
         </condition>
-        <javadoc additionalparam="-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}" author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8" encoding="${javadoc.encoding.used}" failonerror="true" noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}" source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}">
+        <javadoc additionalparam="-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}" author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8" encoding="${javadoc.encoding.used}" executable="${platform.javadoc}" failonerror="true" noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}" source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}">
             <classpath>
                 <path path="${javac.classpath}"/>
             </classpath>
Index: ../nbproject/project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://www.netbeans.org/ns/project/1\">\r\n    <type>org.netbeans.modules.java.j2seproject</type>\r\n    <configuration>\r\n        <data xmlns=\"http://www.netbeans.org/ns/j2se-project/3\">\r\n            <name>TFGBola</name>\r\n            <source-roots>\r\n                <root id=\"src.dir\"/>\r\n            </source-roots>\r\n            <test-roots>\r\n                <root id=\"test.src.dir\"/>\r\n            </test-roots>\r\n        </data>\r\n    </configuration>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../nbproject/project.xml b/../nbproject/project.xml
--- a/../nbproject/project.xml	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../nbproject/project.xml	(date 1747312249562)
@@ -4,6 +4,7 @@
     <configuration>
         <data xmlns="http://www.netbeans.org/ns/j2se-project/3">
             <name>TFGBola</name>
+            <explicit-platform explicit-source-supported="true"/>
             <source-roots>
                 <root id="src.dir"/>
             </source-roots>
Index: ../nbproject/genfiles.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>build.xml.data.CRC32=48bdca1c\r\nbuild.xml.script.CRC32=708fc0f1\r\nbuild.xml.stylesheet.CRC32=f85dc8f2@1.114.0.48\r\n# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\r\n# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\r\nnbproject/build-impl.xml.data.CRC32=48bdca1c\r\nnbproject/build-impl.xml.script.CRC32=9681bdd1\r\nnbproject/build-impl.xml.stylesheet.CRC32=12e0a6c2@1.114.0.48\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../nbproject/genfiles.properties b/../nbproject/genfiles.properties
--- a/../nbproject/genfiles.properties	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../nbproject/genfiles.properties	(date 1747312249560)
@@ -1,8 +1,8 @@
-build.xml.data.CRC32=48bdca1c
+build.xml.data.CRC32=2cddc061
 build.xml.script.CRC32=708fc0f1
-build.xml.stylesheet.CRC32=f85dc8f2@1.114.0.48
+build.xml.stylesheet.CRC32=f85dc8f2@1.106.0.48
 # This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.
 # Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.
-nbproject/build-impl.xml.data.CRC32=48bdca1c
-nbproject/build-impl.xml.script.CRC32=9681bdd1
-nbproject/build-impl.xml.stylesheet.CRC32=12e0a6c2@1.114.0.48
+nbproject/build-impl.xml.data.CRC32=2cddc061
+nbproject/build-impl.xml.script.CRC32=85b0cb69
+nbproject/build-impl.xml.stylesheet.CRC32=12e0a6c2@1.106.0.48
Index: ../nbproject/project.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>annotation.processing.enabled=true\r\nannotation.processing.enabled.in.editor=false\r\nannotation.processing.processors.list=\r\nannotation.processing.run.all.processors=true\r\nannotation.processing.source.output=${build.generated.sources.dir}/ap-source-output\r\napplication.title=TFGBola\r\napplication.vendor=Nitropc\r\nauxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml\r\nbuild.classes.dir=${build.dir}/classes\r\nbuild.classes.excludes=**/*.java,**/*.form\r\n# This directory is removed when the project is cleaned:\r\nbuild.dir=build\r\nbuild.generated.dir=${build.dir}/generated\r\nbuild.generated.sources.dir=${build.dir}/generated-sources\r\n# Only compile against the classpath explicitly listed here:\r\nbuild.sysclasspath=ignore\r\nbuild.test.classes.dir=${build.dir}/test/classes\r\nbuild.test.results.dir=${build.dir}/test/results\r\n# Uncomment to specify the preferred debugger connection transport:\r\n#debug.transport=dt_socket\r\ndebug.classpath=\\\r\n    ${run.classpath}\r\ndebug.modulepath=\\\r\n    ${run.modulepath}\r\ndebug.test.classpath=\\\r\n    ${run.test.classpath}\r\ndebug.test.modulepath=\\\r\n    ${run.test.modulepath}\r\n# Files in build.classes.dir which should be excluded from distribution jar\r\ndist.archive.excludes=\r\n# This directory is removed when the project is cleaned:\r\ndist.dir=dist\r\ndist.jar=${dist.dir}/TFGBola.jar\r\ndist.javadoc.dir=${dist.dir}/javadoc\r\ndist.jlink.dir=${dist.dir}/jlink\r\ndist.jlink.output=${dist.jlink.dir}/TFGBola\r\nendorsed.classpath=\r\nexcludes=\r\nfile.reference.gson-2.12.1.jar=gson-2.12.1.jar\r\nincludes=**\r\njar.archive.disabled=${jnlp.enabled}\r\njar.compress=false\r\njar.index=${jnlp.enabled}\r\njavac.classpath=\\\r\n    ${file.reference.gson-2.12.1.jar}\r\n# Space-separated list of extra javac options\r\njavac.compilerargs=\\ --enable-preview\r\njavac.deprecation=false\r\njavac.external.vm=true\r\njavac.modulepath=\r\njavac.processormodulepath=\r\njavac.processorpath=\\\r\n    ${javac.classpath}\r\njavac.source=21\r\njavac.target=21\r\njavac.test.classpath=\\\r\n    ${javac.classpath}:\\\r\n    ${build.classes.dir}\r\njavac.test.modulepath=\\\r\n    ${javac.modulepath}\r\njavac.test.processorpath=\\\r\n    ${javac.test.classpath}\r\njavadoc.additionalparam=\r\njavadoc.author=false\r\njavadoc.encoding=${source.encoding}\r\njavadoc.html5=false\r\njavadoc.noindex=false\r\njavadoc.nonavbar=false\r\njavadoc.notree=false\r\njavadoc.private=false\r\njavadoc.splitindex=true\r\njavadoc.use=true\r\njavadoc.version=false\r\njavadoc.windowtitle=\r\n# The jlink additional root modules to resolve\r\njlink.additionalmodules=\r\n# The jlink additional command line parameters\r\njlink.additionalparam=\r\njlink.launcher=true\r\njlink.launcher.name=TFGBola\r\njnlp.codebase.type=no.codebase\r\njnlp.descriptor=application\r\njnlp.enabled=false\r\njnlp.mixed.code=default\r\njnlp.offline-allowed=false\r\njnlp.signed=false\r\njnlp.signing=\r\njnlp.signing.alias=\r\njnlp.signing.keystore=\r\nmain.class=tfgbola.TFGMoverObjetosMando\r\n# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.\r\nmanifest.custom.application.library.allowable.codebase=\r\n# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.\r\nmanifest.custom.caller.allowable.codebase=\r\n# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed\r\nmanifest.custom.codebase=\r\n# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)\r\nmanifest.custom.permissions=\r\nmanifest.file=manifest.mf\r\nmeta.inf.dir=${src.dir}/META-INF\r\nmkdist.disabled=false\r\nplatform.active=default_platform\r\nrun.classpath=\\\r\n    ${javac.classpath}:\\\r\n    ${build.classes.dir}\r\n# Space-separated list of JVM arguments used when running the project.\r\n# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\r\n# To set system properties for unit tests define test-sys-prop.name=value:\r\nrun.jvmargs=\\ --enable-preview\r\nrun.modulepath=\\\r\n    ${javac.modulepath}\r\nrun.test.classpath=\\\r\n    ${javac.test.classpath}:\\\r\n    ${build.test.classes.dir}\r\nrun.test.modulepath=\\\r\n    ${javac.test.modulepath}\r\nsource.encoding=UTF-8\r\nsrc.dir=src\r\ntest.src.dir=test\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../nbproject/project.properties b/../nbproject/project.properties
--- a/../nbproject/project.properties	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../nbproject/project.properties	(date 1747312249562)
@@ -99,7 +99,7 @@
 manifest.file=manifest.mf
 meta.inf.dir=${src.dir}/META-INF
 mkdist.disabled=false
-platform.active=default_platform
+platform.active=JDK_21
 run.classpath=\
     ${javac.classpath}:\
     ${build.classes.dir}
Index: ../src/tfgbola/main/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template\r\n */\r\npackage tfgbola.main;\r\n\r\nimport java.util.ArrayList;\r\nimport tfgbola.TFGMoverObjetosMando;\r\nimport tfgbola.main.objects.Asteroide;\r\nimport tfgbola.main.objects.Bala;\r\nimport tfgbola.main.objects.Car;\r\nimport tfgbola.main.objects.Nave;\r\nimport tfgbola.main.objects.Vector;\r\n\r\n/**\r\n *\r\n * @author jesus\r\n */\r\npublic class MainController {\r\n\r\n    private TFGMoverObjetosMando tfg;\r\n    private MainViewer viewer;\r\n    private MainModel model;\r\n\r\n    public MainController(TFGMoverObjetosMando aThis) {\r\n        this.tfg = aThis;\r\n        this.model = new MainModel(this);\r\n        this.viewer = new MainViewer(this);\r\n        Thread viewerTh = new Thread(this.viewer);\r\n        viewerTh.start();\r\n    }\r\n\r\n    public void reiniciarJuego(){\r\n        this.model = new MainModel(this);\r\n        this.viewer.reiniciarJuego(this);\r\n    }\r\n\r\n    public MainModel getModel() {\r\n        return this.model;\r\n    }\r\n\r\n    public Nave getBola() {\r\n        return this.model.getNave();\r\n    }\r\n\r\n    public void setVelocidadNave(Vector velocidad) {\r\n        this.model.setVelocidadNave(velocidad);\r\n    }\r\n\r\n    public void setAction(String action) {\r\n        this.model.setAction(action);\r\n    }\r\n    \r\n    public Nave setNaveViewer(){\r\n        return this.model.getNave();\r\n    }\r\n    \r\n    public Car setCarViewer(){\r\n        return this.model.getCar();\r\n    }\r\n\r\n    public void addBala(Bala bala) {\r\n        this.viewer.addBalaToPanel(bala);\r\n    }\r\n\r\n    public void addAsteroide(Asteroide asteroide) {\r\n        this.model.addAsteroide(asteroide);\r\n    }\r\n\r\n    void setAsteroides(ArrayList<Asteroide> asteroides) {\r\n        this.viewer.setAsteroides(asteroides);\r\n    }\r\n\r\n    void setBalas(ArrayList<Bala> balas) {\r\n        this.viewer.setBalas(balas);\r\n    }\r\n\r\n    public void setCarAngle(float angulo) {\r\n        this.model.setCarAngle(angulo);\r\n    }\r\n    \r\n    public void setCarVelocidad(float velocidad) {\r\n        this.model.setCarVelocidad(velocidad);\r\n    }\r\n\r\n    public void sendGameOver() {\r\n        this.tfg.sendGameOver();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../src/tfgbola/main/MainController.java b/../src/tfgbola/main/MainController.java
--- a/../src/tfgbola/main/MainController.java	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../src/tfgbola/main/MainController.java	(date 1747312249564)
@@ -86,4 +86,16 @@
     public void sendGameOver() {
         this.tfg.sendGameOver();
     }
+    
+    public void sendVidaNave(int vida){
+        this.tfg.sendVidaNave(vida);
+    }
+
+    public int getVidaNave() {
+        return this.viewer.getNave().getVida();
+    }
+
+    public float getCuentaAtras() {
+        return this.viewer.CUENTA_ATRAS_MILIS;
+    }
 }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"CHOOSE_PER_TEST\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/.idea/gradle.xml	(date 1747312249557)
@@ -13,7 +13,6 @@
             <option value="$PROJECT_DIR$/app" />
           </set>
         </option>
-        <option name="resolveExternalAnnotations" value="false" />
       </GradleProjectSettings>
     </option>
   </component>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"jbr-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/.idea/misc.xml	(date 1747312257609)
@@ -1,6 +1,6 @@
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="jbr-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" project-jdk-name="jbr-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/res/drawable/life_bar_drawable.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/life_bar_drawable.xml b/app/src/main/res/drawable/life_bar_drawable.xml
new file mode 100644
--- /dev/null	(date 1747312249559)
+++ b/app/src/main/res/drawable/life_bar_drawable.xml	(date 1747312249559)
@@ -0,0 +1,16 @@
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@android:id/background">
+        <shape>
+            <corners android:radius="10dp"/>
+            <solid android:color="#444444"/>
+        </shape>
+    </item>
+    <item android:id="@android:id/progress">
+        <clip>
+            <shape>
+                <corners android:radius="10dp"/>
+                <solid android:color="#ff0000"/>
+            </shape>
+        </clip>
+    </item>
+</layer-list>
Index: ../src/tfgbola/main/MainViewer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template\r\n */\r\npackage tfgbola.main;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JLabel;\r\nimport javax.swing.JOptionPane;\r\nimport tfgbola.main.objects.Asteroide;\r\nimport tfgbola.main.objects.Bala;\r\nimport tfgbola.main.objects.Car;\r\nimport tfgbola.main.objects.Nave;\r\nimport tfgbola.main.objects.Vector;\r\n\r\n/**\r\n *\r\n * @author jesus\r\n */\r\npublic class MainViewer extends JFrame implements Runnable {\r\n\r\n    private MainController mainController;\r\n    private MainPanel mainPanel;\r\n\r\n    private Nave nave;\r\n    private Car car;\r\n    private ArrayList<Bala> balas;\r\n    private ArrayList<Asteroide> asteroides;\r\n\r\n    private int score;\r\n\r\n    public MainViewer(MainController aThis) {\r\n        initObjects(aThis);\r\n        createThreads();\r\n        addPanel();\r\n        this.setSize(900, 900);\r\n        this.setResizable(false);\r\n        this.setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        this.setVisible(true);\r\n    }\r\n\r\n    public void addPanel() {\r\n        // Añadimos la nave y el coche al panel\r\n        this.mainPanel = new MainPanel(this);\r\n        this.mainPanel.setNave(nave);\r\n        this.mainPanel.setCar(car);\r\n        this.add(mainPanel);\r\n    }\r\n\r\n    public void reiniciarPanel() {\r\n        this.mainPanel.reiniciarJuego(this);\r\n        this.mainPanel.setNave(nave);\r\n        this.mainPanel.setCar(car);\r\n    }\r\n\r\n    public void createThreads() {\r\n        // Inicializamos la nave\r\n        this.nave = mainController.setNaveViewer();\r\n        this.nave.setModel(this.mainController.getModel());\r\n        Thread thNave = new Thread(nave);\r\n        thNave.start();\r\n        // Inicializamos el coche\r\n        this.car = mainController.setCarViewer();\r\n        Thread thCar = new Thread(car);\r\n        thCar.start();\r\n    }\r\n\r\n    public void reiniciarJuego(MainController aThis) {\r\n        initObjects(aThis);\r\n        createThreads();\r\n        reiniciarPanel();\r\n    }\r\n\r\n    public void initObjects(MainController aThis) {\r\n        this.score = 0;\r\n        this.mainController = aThis;\r\n        this.balas = new ArrayList<>();\r\n        this.asteroides = new ArrayList<>();\r\n    }\r\n\r\n    public void addBalaToPanel(Bala bala) {\r\n        this.balas.add(bala);\r\n        this.mainPanel.addBala(bala);\r\n    }\r\n\r\n    public ArrayList<Bala> getBalas() {\r\n        return this.balas;\r\n    }\r\n\r\n    public Nave getNave() {\r\n        return this.nave;\r\n    }\r\n\r\n    public void setNave(Nave nave) {\r\n        this.nave = nave;\r\n        this.mainPanel.setNave(nave);\r\n        this.mainPanel.paint();\r\n    }\r\n\r\n    public void generarAsteroide() {\r\n        Asteroide asteroide = new Asteroide();\r\n        asteroides.add(asteroide);\r\n        mainController.addAsteroide(asteroide);\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        long lastAsteroidTime = System.currentTimeMillis(); // Tiempo del último asteroide generado\r\n        while (true) {\r\n            try {\r\n                long currentTime = System.currentTimeMillis();\r\n                // Verificar si ha pasado el tiempo necesario para crear un nuevo asteroide\r\n                if (currentTime - lastAsteroidTime >= (Math.random() * 3000 + 1000)) { // Entre 1s y 4s\r\n                    generarAsteroide();\r\n                    lastAsteroidTime = currentTime; // Reiniciar el temporizador\r\n                }\r\n                // Actualizar el juego: mover los objetos, verificar colisiones, etc.\r\n                if (nave.isIsAlive()) {\r\n                    actualizarJuego();\r\n                }\r\n                // Solicitar repintado de la interfaz gráfica\r\n                this.mainPanel.paint();  // Esto actualizará la pantalla sin llamar directamente a paint()\r\n                Thread.sleep(20); // Control del FPS\r\n            } catch (InterruptedException ex) {\r\n                Logger.getLogger(MainViewer.class.getName()).log(Level.SEVERE, null, ex);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void actualizarJuego() {\r\n        // Actualizar las posiciones de los objetos (por ejemplo, balas y asteroides)\r\n        for (Bala bala : balas) {\r\n            bala.mover();  // Mueve las balas\r\n        }\r\n\r\n        // Crear listas de asteroides y balas a eliminar\r\n        ArrayList<Bala> balasToRemove = new ArrayList<>();\r\n        ArrayList<Asteroide> asteroidesToRemove = new ArrayList<>();\r\n\r\n        // Verificar colisiones entre balas y asteroides\r\n        for (Bala bala : balas) {\r\n            boolean addscore = false;\r\n            for (Asteroide asteroide : asteroides) {\r\n                if (checkImpacto(bala, asteroide)) {\r\n                    System.out.println(\"Colisión detectada entre bala y asteroide!\");\r\n                    // Marcar para eliminar los asteroides y balas que han colisionado\r\n                    asteroidesToRemove.add(asteroide);\r\n                    balasToRemove.add(bala);\r\n                    bala.explode();\r\n                    asteroide.explode();\r\n                    if (!addscore) {\r\n                        aumentarScore();\r\n                        addscore = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Verificar colisión entre nave y asteroides\r\n        for (Asteroide asteroide : asteroides) {\r\n            if (checkImpacto(nave, asteroide)) {\r\n                System.out.println(\"Colisión detectada entre nave y asteroide!\");\r\n                this.nave.damage(asteroide.getRadio());\r\n                if (!this.nave.isIsAlive()) {\r\n                    this.mainController.sendGameOver();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Verificar si alguna bala o asteroide se ha salido de los márgenes de la ventana\r\n        for (Bala bala : balas) {\r\n            if (isOutsideBounds(bala.getPosicion())) {\r\n                balasToRemove.add(bala);  // Eliminar la bala fuera de los límites\r\n            }\r\n        }\r\n\r\n        for (Asteroide asteroide : asteroides) {\r\n            if (isOutsideBounds(asteroide.getPosicion())) {\r\n                asteroidesToRemove.add(asteroide);  // Eliminar el asteroide fuera de los límites\r\n            }\r\n        }\r\n\r\n        // Eliminar los asteroides y balas que han impactado o que se han salido de los márgenes\r\n        asteroides.removeAll(asteroidesToRemove);\r\n        balas.removeAll(balasToRemove);\r\n\r\n        // Actualizar los objetos en el controlador\r\n        mainController.setAsteroides(asteroides);\r\n        mainController.setBalas(balas);\r\n    }\r\n\r\n// Método para verificar si un objeto está fuera de los límites de la ventana (900x900)\r\n    private boolean isOutsideBounds(Vector posicion) {\r\n        // Verificamos si la posición del objeto está fuera de la ventana de 900x900\r\n        return posicion.getX() < 0 || posicion.getX() > 900 || posicion.getY() < 0 || posicion.getY() > 900;\r\n    }\r\n\r\n    public void aumentarScore() {\r\n        this.score += 1;\r\n        this.mainPanel.actualizarScore(score);\r\n    }\r\n\r\n    public void actualizarScore(int score) {\r\n        this.mainPanel.actualizarScore(score);\r\n    }\r\n\r\n    public boolean checkImpacto(Object object, Asteroide asteroide) {\r\n        boolean impact = false;\r\n        if (object instanceof Bala) {\r\n            Bala bala = (Bala) object;\r\n            // Obtener la posición de la bala y del asteroide\r\n            Vector posBala = bala.getPosicion();\r\n            Vector posAsteroide = asteroide.getPosicion();\r\n            // Obtener el radio de la bala y el asteroide\r\n            double radioBala = bala.getRadio();  // Radio de la bala\r\n            double radioAsteroide = asteroide.getRadio();  // Radio del asteroide\r\n            // Calcular la distancia entre la bala y el asteroide\r\n            double distancia = posBala.distanceTo(posAsteroide);\r\n            // Si la distancia es menor que la suma de los radios, se considera un impacto\r\n            impact = distancia <= (radioBala + radioAsteroide);\r\n        } else if (object instanceof Nave) {\r\n            Nave nave = (Nave) object;\r\n            // Obtener la posición de la nave y del asteroide\r\n            Vector posNave = nave.getPosicion();\r\n            Vector posAsteroide = asteroide.getPosicion();\r\n            // Obtener el radio de la nave y el asteroide\r\n            double radioNave = nave.getRadio();  // Radio de la nave\r\n            double radioAsteroide = asteroide.getRadio();// Radio del asteroide\r\n            // Calcular la distancia entre la bala y el asteroide\r\n            double distancia = posNave.distanceTo(posAsteroide);\r\n            // Si la distancia es menor que la suma de los radios, se considera un impacto\r\n            impact = distancia <= (radioNave + radioAsteroide);\r\n        }\r\n        return impact;\r\n    }\r\n\r\n    void setAsteroides(ArrayList<Asteroide> asteroides) {\r\n        this.asteroides = asteroides;\r\n        this.mainPanel.setAsteroides(asteroides);\r\n        this.mainPanel.paint();\r\n    }\r\n\r\n    void setBalas(ArrayList<Bala> balas) {\r\n        this.balas = balas;\r\n        this.mainPanel.setBalas(balas);\r\n        this.mainPanel.paint();\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../src/tfgbola/main/MainViewer.java b/../src/tfgbola/main/MainViewer.java
--- a/../src/tfgbola/main/MainViewer.java	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../src/tfgbola/main/MainViewer.java	(date 1747312249565)
@@ -30,6 +30,8 @@
     private Car car;
     private ArrayList<Bala> balas;
     private ArrayList<Asteroide> asteroides;
+    
+    public static final float CUENTA_ATRAS_MILIS = 120000;
 
     private int score;
 
@@ -106,6 +108,8 @@
         asteroides.add(asteroide);
         mainController.addAsteroide(asteroide);
     }
+    
+    
 
     @Override
     public void run() {
@@ -164,6 +168,7 @@
             if (checkImpacto(nave, asteroide)) {
                 System.out.println("Colisión detectada entre nave y asteroide!");
                 this.nave.damage(asteroide.getRadio());
+                this.mainController.sendVidaNave(this.nave.getVida());
                 if (!this.nave.isIsAlive()) {
                     this.mainController.sendGameOver();
                     break;
Index: app/src/main/res/layout-land/car_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/carLayoutRoot\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@drawable/car_background_2\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <!-- Botón de configuración, arriba a la derecha -->\r\n    <ImageButton\r\n        android:id=\"@+id/btnSettings\"\r\n        android:layout_width=\"80dp\"\r\n        android:layout_height=\"72dp\"\r\n        android:background=\"@null\"\r\n        android:padding=\"5dp\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/configuraciones\"\r\n        android:layout_gravity=\"top|end\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:layout_marginEnd=\"16dp\" />\r\n\r\n    <!-- Acelerador, abajo a la derecha -->\r\n    <ImageButton\r\n        android:id=\"@+id/btnAcelerar\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"120dp\"\r\n        android:background=\"@null\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/accelerator\"\r\n        android:layout_gravity=\"bottom|end\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:layout_marginEnd=\"16dp\" />\r\n\r\n    <!-- Freno, justo a la izquierda del acelerador -->\r\n    <ImageButton\r\n        android:id=\"@+id/btnFrenar\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"120dp\"\r\n        android:background=\"@null\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/brake\"\r\n        android:layout_gravity=\"bottom|end\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:layout_marginEnd=\"144dp\" />\r\n\r\n    <!-- Volante, abajo a la izquierda -->\r\n    <ImageButton\r\n        android:id=\"@+id/volante\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"120dp\"\r\n        android:background=\"@null\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/volante\"\r\n        android:layout_gravity=\"bottom|start\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:layout_marginStart=\"16dp\" />\r\n\r\n    <!-- Marcha atrás, encima de los botones de freno y acelerador -->\r\n    <ImageButton\r\n        android:id=\"@+id/marchaAtras\"\r\n        android:layout_width=\"120dp\"\r\n        android:layout_height=\"120dp\"\r\n        android:layout_gravity=\"bottom|center_horizontal\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:background=\"@null\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/cambios\" />\r\n\r\n</FrameLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/car_layout.xml b/app/src/main/res/layout-land/car_layout.xml
--- a/app/src/main/res/layout-land/car_layout.xml	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/app/src/main/res/layout-land/car_layout.xml	(date 1747312249559)
@@ -8,54 +8,71 @@
     android:background="@drawable/car_background_2"
     tools:context=".MainActivity">
 
+
     <!-- Botón de configuración, arriba a la derecha -->
     <ImageButton
         android:id="@+id/btnSettings"
         android:layout_width="80dp"
         android:layout_height="72dp"
+        android:layout_gravity="top|end"
+        android:layout_marginTop="16dp"
+        android:layout_marginEnd="16dp"
         android:background="@null"
         android:padding="5dp"
         android:scaleType="fitCenter"
-        android:src="@drawable/configuraciones"
-        android:layout_gravity="top|end"
-        android:layout_marginTop="16dp"
-        android:layout_marginEnd="16dp" />
+        android:src="@drawable/configuraciones" />
+
+    <TextView
+        android:id="@+id/textoCuentaAtras"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="top|center_horizontal"
+        android:layout_marginTop="24dp"
+        android:shadowColor="#000000"
+        android:shadowDx="2"
+        android:shadowDy="2"
+        android:shadowRadius="2"
+        android:text="00:00"
+        android:textColor="@android:color/white"
+        android:textSize="32sp"
+        android:textStyle="bold" />
+
 
     <!-- Acelerador, abajo a la derecha -->
     <ImageButton
         android:id="@+id/btnAcelerar"
         android:layout_width="120dp"
         android:layout_height="120dp"
-        android:background="@null"
-        android:scaleType="fitCenter"
-        android:src="@drawable/accelerator"
         android:layout_gravity="bottom|end"
+        android:layout_marginEnd="16dp"
         android:layout_marginBottom="16dp"
-        android:layout_marginEnd="16dp" />
+        android:background="@null"
+        android:scaleType="fitCenter"
+        android:src="@drawable/accelerator" />
 
     <!-- Freno, justo a la izquierda del acelerador -->
     <ImageButton
         android:id="@+id/btnFrenar"
         android:layout_width="120dp"
         android:layout_height="120dp"
-        android:background="@null"
-        android:scaleType="fitCenter"
-        android:src="@drawable/brake"
         android:layout_gravity="bottom|end"
+        android:layout_marginEnd="144dp"
         android:layout_marginBottom="16dp"
-        android:layout_marginEnd="144dp" />
+        android:background="@null"
+        android:scaleType="fitCenter"
+        android:src="@drawable/brake" />
 
     <!-- Volante, abajo a la izquierda -->
     <ImageButton
         android:id="@+id/volante"
         android:layout_width="120dp"
         android:layout_height="120dp"
-        android:background="@null"
-        android:scaleType="fitCenter"
-        android:src="@drawable/volante"
         android:layout_gravity="bottom|start"
+        android:layout_marginStart="16dp"
         android:layout_marginBottom="16dp"
-        android:layout_marginStart="16dp" />
+        android:background="@null"
+        android:scaleType="fitCenter"
+        android:src="@drawable/volante" />
 
     <!-- Marcha atrás, encima de los botones de freno y acelerador -->
     <ImageButton
Index: app/src/main/res/layout-land/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@drawable/space_background\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/btnSettings\"\r\n        android:layout_width=\"80dp\"\r\n        android:layout_height=\"72dp\"\r\n        android:background=\"@null\"\r\n        android:padding=\"5dp\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/configuraciones\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.976\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.044\" />\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"330dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:background=\"@drawable/space_background\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"1.0\">\r\n    </LinearLayout>\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_main.xml b/app/src/main/res/layout-land/activity_main.xml
--- a/app/src/main/res/layout-land/activity_main.xml	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/app/src/main/res/layout-land/activity_main.xml	(date 1747312249559)
@@ -8,6 +8,22 @@
     android:background="@drawable/space_background"
     tools:context=".MainActivity">
 
+    <ProgressBar
+        android:id="@+id/lifeBar"
+        style="@android:style/Widget.ProgressBar.Horizontal"
+        android:layout_width="300dp"
+        android:layout_height="30dp"
+        android:layout_margin="16dp"
+        android:max="100"
+        android:progress="100"
+        android:progressDrawable="@drawable/life_bar_drawable"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.03"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.063" />
+
     <ImageButton
         android:id="@+id/btnSettings"
         android:layout_width="80dp"
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/.idea/deploymentTargetSelector.xml	(date 1747312249557)
@@ -4,6 +4,14 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
+        <DropdownSelection timestamp="2025-05-15T09:21:14.753255100Z">
+          <Target type="DEFAULT_BOOT">
+            <handle>
+              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\jesus\.android\avd\Pixel_XL_API_34.avd" />
+            </handle>
+          </Target>
+        </DropdownSelection>
+        <DialogSelection />
       </SelectionState>
     </selectionStates>
   </component>
Index: ../nbproject/private/private.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>compile.on.save=true\r\ndo.depend=false\r\ndo.jar=true\r\ndo.jlink=false\r\njavac.debug=true\r\njavadoc.preview=true\r\njlink.strip=false\r\nuser.properties.file=C:\\\\Users\\\\Nitropc\\\\AppData\\\\Roaming\\\\NetBeans\\\\25\\\\build.properties\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../nbproject/private/private.properties b/../nbproject/private/private.properties
--- a/../nbproject/private/private.properties	(revision 43211803a5f38a40149d40411c2af920a34e18b2)
+++ b/../nbproject/private/private.properties	(date 1747312249560)
@@ -5,4 +5,4 @@
 javac.debug=true
 javadoc.preview=true
 jlink.strip=false
-user.properties.file=C:\\Users\\Nitropc\\AppData\\Roaming\\NetBeans\\25\\build.properties
+user.properties.file=C:\\Users\\jesus\\AppData\\Roaming\\NetBeans\\17\\build.properties
Index: ../../.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../../.gitignore b/../../.gitignore
new file mode 100644
--- /dev/null	(date 1747312249549)
+++ b/../../.gitignore	(date 1747312249549)
@@ -0,0 +1,1 @@
+/TFGBola/dist/
